(set-info :smt-lib-version 2.6)
(set-logic UFLIA)
(set-info :source | 
  Simplify front end test suite.
  This benchmark was translated by Michal Moskal.
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun FORMALPARADECL_17.24.7 () Int)
(declare-fun FLOATTYPE_15.31.26 () Int)
(declare-fun locId_151.25.13 () Int)
(declare-fun elementCount_8.79.33 () Int)
(declare-fun POSTFIXDEC_pre_16.63.26 () Int)
(declare-fun DIV_16.35.26 () Int)
(declare-fun CLASSDECL_17.17.7 () Int)
(declare-fun int_9223372036854775807 () Int)
(declare-fun BITXOR_pre_16.22.26 () Int)
(declare-fun TYPEDECLELEMPRAGMA_pre_14.27.26 () Int)
(declare-fun boolOr (Int Int) Bool)
(declare-fun LONGTYPE_pre_15.29.26 () Int)
(declare-fun BITAND_pre_16.23.26 () Int)
(declare-fun GE_16.26.26 () Int)
(declare-fun T_javafe.ast.GenericVarDecl () Int)
(declare-fun T_javafe.util.Location () Int)
(declare-fun tmp3_seqCatchClause_62.9 () Int)
(declare-fun count_158.67.33 () Int)
(declare-fun T_javafe.ast.BranchStmt () Int)
(declare-fun intFirst () Int)
(declare-fun locQuestion_144.22.13 () Int)
(declare-fun op_75.26.13 () Int)
(declare-fun asChild (Int Int) Int)
(declare-fun TRYFINALLYSTMT_pre_17.42.7 () Int)
(declare-fun arrayFresh (Int Int Int Int Int Int Int) Bool)
(declare-fun METHODDECL_pre_17.20.7 () Int)
(declare-fun T_javafe.ast.Name () Int)
(declare-fun currentStackBottom_114.14_8.282.30 () Int)
(declare-fun RBRACE_pre_14.36.26 () Int)
(declare-fun LOCALVARDECL_pre_17.22.7 () Int)
(declare-fun DOUBLETYPE_pre_15.32.26 () Int)
(declare-fun endingLoc_10.72.15 () Int)
(declare-fun T_javafe.ast.AmbiguousVariableAccess () Int)
(declare-fun locDots_pre_159.31.29 () Int)
(declare-fun tmp2_seqCatchClause_61.9 () Int)
(declare-fun UNARYSUB_pre_16.55.26 () Int)
(declare-fun INSTANCEOFEXPR_pre_17.52.7 () Int)
(declare-fun T_javafe.ast.TypeModifierPragma () Int)
(declare-fun URSHIFT_pre_16.32.26 () Int)
(declare-fun RES_77.3_77.3 () Int)
(declare-fun locOpenParen_151.28.13 () Int)
(declare-fun INC_16.58.26 () Int)
(declare-fun T_javafe.ast.Modifiers () Int)
(declare-fun ASGURSHIFT_pre_16.48.26 () Int)
(declare-fun name_pre_35.20.28 () Int)
(declare-fun count_pre_128.67.33 () Int)
(declare-fun T_javafe.ast.LabelStmt () Int)
(declare-fun T_javafe.ast.ParenExpr () Int)
(declare-fun RES_119.1_119.1 () Int)
(declare-fun asField (Int Int) Int)
(declare-fun T_javafe.ast.CatchClause () Int)
(declare-fun T_javafe.parser.Lex () Int)
(declare-fun type_146.18.28 () Int)
(declare-fun seqTypeDeclElem_pre_4.1161.46 () Int)
(declare-fun T_javafe.ast.InstanceOfExpr () Int)
(declare-fun body_pre_133.34.19 () Int)
(declare-fun INTERFACEDECL_17.18.7 () Int)
(declare-fun InRange (Int Int) Bool)
(declare-fun T_javafe.ast.BinaryExpr () Int)
(declare-fun ASGMUL_16.41.26 () Int)
(declare-fun LABELSTMT_17.37.7 () Int)
(declare-fun IF_pre_14.73.26 () Int)
(declare-fun CLASS_pre_14.59.26 () Int)
(declare-fun THROWSTMT_17.34.7 () Int)
(declare-fun SEMICOLON_pre_14.34.26 () Int)
(declare-fun modifierPragmas_pre_6.134.29 () Int)
(declare-fun CLASSDECLSTMT_17.28.7 () Int)
(declare-fun EXPROBJECTDESIGNATOR_17.61.7 () Int)
(declare-fun THISEXPR_17.47.7 () Int)
(declare-fun T_javafe.ast.PrimitiveType () Int)
(declare-fun locOpenParen_pre_142.52.13 () Int)
(declare-fun this_114.14_114.14 () Int)
(declare-fun loc_142.49.13 () Int)
(declare-fun THISEXPR_pre_17.47.7 () Int)
(declare-fun CATCH_14.57.26 () Int)
(declare-fun T_javafe.ast.ArrayInit () Int)
(declare-fun this_118.18_118.18 () Int)
(declare-fun RPAREN_14.38.26 () Int)
(declare-fun modifierPragmas_6.134.29 () Int)
(declare-fun ASGADD_pre_16.44.26 () Int)
(declare-fun seqModifierPragma_6.74.32 () Int)
(declare-fun EXPROBJECTDESIGNATOR_pre_17.61.7 () Int)
(declare-fun loc_pre_143.49.13 () Int)
(declare-fun auxVal_10.127.18 () Int)
(declare-fun locDot_pre_135.21.13 () Int)
(declare-fun COLON_pre_14.43.26 () Int)
(declare-fun tag_pre_71.30.13 () Int)
(declare-fun int_2147483647 () Int)
(declare-fun loc_pre_133.40.13 () Int)
(declare-fun SUPEROBJECTDESIGNATOR_17.63.7 () Int)
(declare-fun intLast () Int)
(declare-fun longFirst () Int)
(declare-fun loc_47.22.13 () Int)
(declare-fun arrayType () Int)
(declare-fun tag_pre_61.32.13 () Int)
(declare-fun elements_pre_128.61.38 () Int)
(declare-fun locOpenParen_52.23.13 () Int)
(declare-fun LEXICALPRAGMA_pre_14.24.26 () Int)
(declare-fun LT_pre_16.29.26 () Int)
(declare-fun locId_66.38.13 () Int)
(declare-fun RES_118.18_118.18 () Int)
(declare-fun elementCount_pre_8.79.33 () Int)
(declare-fun T_javafe.ast.VariableAccess () Int)
(declare-fun NEWINSTANCEEXPR_pre_17.49.7 () Int)
(declare-fun ASGBITAND_16.49.26 () Int)
(declare-fun seqCatchClause_zero () Int)
(declare-fun SUPEROBJECTDESIGNATOR_pre_17.63.7 () Int)
(declare-fun TYPEMODIFIERPRAGMA_14.28.26 () Int)
(declare-fun CHARTYPE_pre_15.30.26 () Int)
(declare-fun VARDECLSTMT_17.27.7 () Int)
(declare-fun TYPENAME_pre_17.64.7 () Int)
(declare-fun CONSTRUCTORINVOCATION_17.44.7 () Int)
(declare-fun RSHIFT_16.31.26 () Int)
(declare-fun SUB_16.34.26 () Int)
(declare-fun BREAKSTMT_17.35.7 () Int)
(declare-fun VARIABLEACCESS_17.56.7 () Int)
(declare-fun loc_pre_43.18.13 () Int)
(declare-fun loc_pre_145.21.13 () Int)
(declare-fun integralMod (Int Int) Int)
(declare-fun DOSTMT_17.30.7 () Int)
(declare-fun CONCVARSYM (Int) Int)
(declare-fun tokenType_70.90.8 () Int)
(declare-fun T_short () Int)
(declare-fun RES_57.23_57.23 () Int)
(declare-fun locId_pre_149.24.13 () Int)
(declare-fun COLON_14.43.26 () Int)
(declare-fun T_javafe.parser.PragmaParser () Int)
(declare-fun after_77.3_77.3 () Int)
(declare-fun loc_pre_71.35.13 () Int)
(declare-fun length_pre_36.50.25 () Int)
(declare-fun loc_134.29.13 () Int)
(declare-fun elements_53.61.40 () Int)
(declare-fun locId_pre_133.43.13 () Int)
(declare-fun typeof (Int) Int)
(declare-fun T_javafe.parser.ParseUtil () Int)
(declare-fun auxVal_pre_10.127.18 () Int)
(declare-fun RSHIFT_pre_16.31.26 () Int)
(declare-fun seqStmt_70.46 () Int)
(declare-fun LBRACE_pre_14.35.26 () Int)
(declare-fun type_pre_146.18.28 () Int)
(declare-fun termConditional (Int Int Int) Int)
(declare-fun ONDEMANDIMPORTDECL_17.16.7 () Int)
(declare-fun INITBLOCK_17.21.7 () Int)
(declare-fun Smt.true () Int)
(declare-fun NONE_40.18.26 () Int)
(declare-fun RES_1_ () Int)
(declare-fun locCloseBrace_pre_13.54.13 () Int)
(declare-fun RES_117.34_117.34 () Int)
(declare-fun T_byte () Int)
(declare-fun elements_pre_158.61.39 () Int)
(declare-fun value_61.45.16 () Int)
(declare-fun FINALLY_pre_14.69.26 () Int)
(declare-fun ASGBITOR_16.50.26 () Int)
(declare-fun returnType_pre_132.18.28 () Int)
(declare-fun AMBIGUOUSMETHODINVOCATION_17.58.7 () Int)
(declare-fun RES_2_ () Int)
(declare-fun T_java.lang.Integer () Int)
(declare-fun T_java.util.Hashtable () Int)
(declare-fun locFinally_pre_55.25.13 () Int)
(declare-fun Smt.false () Int)
(declare-fun init_pre_143.35.19 () Int)
(declare-fun UNARYADD_pre_16.54.26 () Int)
(declare-fun FOR_14.71.26 () Int)
(declare-fun locDot_pre_58.41.13 () Int)
(declare-fun RES () Int)
(declare-fun BOOLEANTYPE_pre_15.27.26 () Int)
(declare-fun loc_pre_157.20.13 () Int)
(declare-fun locType_132.21.13 () Int)
(declare-fun SWITCH_pre_14.92.26 () Int)
(declare-fun IFSTMT_pre_17.38.7 () Int)
(declare-fun otherStrings_pre_14.193.30 () Int)
(declare-fun COMMA_pre_14.33.26 () Int)
(declare-fun CASTEXPR_17.53.7 () Int)
(declare-fun T_javafe.ast.LexicalPragma () Int)
(declare-fun ARRAYTYPE_pre_17.65.7 () Int)
(declare-fun ASGDIV_16.42.26 () Int)
(declare-fun T_java.lang.Cloneable () Int)
(declare-fun SWITCH_14.92.26 () Int)
(declare-fun NEWARRAYEXPR_17.50.7 () Int)
(declare-fun ARRAYINIT_17.46.7 () Int)
(declare-fun int_m9223372036854775808 () Int)
(declare-fun loc_pre_13.45.13 () Int)
(declare-fun DOUBLETYPE_15.32.26 () Int)
(declare-fun EC_116.6_116.6 () Int)
(declare-fun INTLIT_pre_15.39.26 () Int)
(declare-fun locId_13.48.13 () Int)
(declare-fun locIds_159.25.29 () Int)
(declare-fun T_javafe.ast.SingleTypeImportDecl () Int)
(declare-fun T_javafe.ast.NewInstanceExpr () Int)
(declare-fun T_javafe.parser.ParseType () Int)
(declare-fun POSTFIXINC_16.62.26 () Int)
(declare-fun count_pre_129.67.33 () Int)
(declare-fun is (Int Int) Int)
(declare-fun ARRAYREFEXPR_pre_17.48.7 () Int)
(declare-fun locCloseBrace_29.25.13 () Int)
(declare-fun SIMPLENAME_17.66.7 () Int)
(declare-fun TYPEOBJECTDESIGNATOR_17.62.7 () Int)
(declare-fun TYPESIG_76.6.28 () Int)
(declare-fun ELSE_pre_14.65.26 () Int)
(declare-fun ASGREM_pre_16.43.26 () Int)
(declare-fun VOIDTYPE_pre_15.33.26 () Int)
(declare-fun type_145.18.28 () Int)
(declare-fun CONDEXPR_pre_17.51.7 () Int)
(declare-fun ASGBITOR_pre_16.50.26 () Int)
(declare-fun T_javafe.ast.Stmt () Int)
(declare-fun loc_143.49.13 () Int)
(declare-fun value_pre_61.45.16 () Int)
(declare-fun LSHIFT_pre_16.30.26 () Int)
(declare-fun CONTINUE_14.61.26 () Int)
(declare-fun LONGLIT_pre_15.40.26 () Int)
(declare-fun T_javafe.ast.GeneratedTags () Int)
(declare-fun locOpenBracket_141.20.13 () Int)
(declare-fun loc_pre_50.33.13 () Int)
(declare-fun CONSTRUCTORDECL_17.19.7 () Int)
(declare-fun count_160.67.33 () Int)
(declare-fun T_java.lang.Comparable () Int)
(declare-fun loc_49.20.13 () Int)
(declare-fun T_javafe.tc.Env () Int)
(declare-fun tokenType_pre_70.90.8 () Int)
(declare-fun seqExpr_pre_4.1145.46 () Int)
(declare-fun TRYFINALLYSTMT_17.42.7 () Int)
(declare-fun FIELDDECL_pre_17.23.7 () Int)
(declare-fun STMTPRAGMA_pre_14.26.26 () Int)
(declare-fun T_javafe.ast.CompilationUnit () Int)
(declare-fun SIMPLENAME_pre_17.66.7 () Int)
(declare-fun TYPEDECLELEMPRAGMA_14.27.26 () Int)
(declare-fun code_pre_9.1294.15 () Int)
(declare-fun BOOLEANTYPE_15.27.26 () Int)
(declare-fun T_java.util.EscjavaKeyValue () Int)
(declare-fun locOpenParen_146.21.13 () Int)
(declare-fun loc_pre_142.49.13 () Int)
(declare-fun VOIDTYPE_15.33.26 () Int)
(declare-fun T_javafe.ast.ExprObjectDesignator () Int)
(declare-fun locQuestion_pre_144.22.13 () Int)
(declare-fun EC_57.23_57.23 () Int)
(declare-fun T_javafe.ast.ClassDeclStmt () Int)
(declare-fun T_javafe.parser.Token () Int)
(declare-fun T_javafe.ast.ObjectDesignator () Int)
(declare-fun MOD_16.36.26 () Int)
(declare-fun ASGBITAND_pre_16.49.26 () Int)
(declare-fun enclosingInstance_pre_142.25.14 () Int)
(declare-fun isNewArray (Int) Int)
(declare-fun RETURN_pre_14.87.26 () Int)
(declare-fun T_javafe.tc.FieldDeclVec () Int)
(declare-fun SINGLETYPEIMPORTDECL_17.15.7 () Int)
(declare-fun tmp0_seqStmt_58.9 () Int)
(declare-fun NONE_pre_40.18.26 () Int)
(declare-fun THROW_14.95.26 () Int)
(declare-fun count_59.67.33 () Int)
(declare-fun BITAND_16.23.26 () Int)
(declare-fun METHODINVOCATION_pre_17.59.7 () Int)
(declare-fun T_javafe.ast.TypeDeclElemPragma () Int)
(declare-fun LE_16.28.26 () Int)
(declare-fun T_javafe.util.CorrelatedReader () Int)
(declare-fun MODIFIERPRAGMA_14.25.26 () Int)
(declare-fun loc_71.35.13 () Int)
(declare-fun loc_52.20.13 () Int)
(declare-fun FIELDACCESS_17.57.7 () Int)
(declare-fun count_57.67.33 () Int)
(declare-fun T_java.lang.String () Int)
(declare-fun T_javafe.ast.InitBlock () Int)
(declare-fun locOpenParen_pre_150.30.13 () Int)
(declare-fun NULLLIT_15.45.26 () Int)
(declare-fun loc_pre_134.29.13 () Int)
(declare-fun SKIPSTMT_17.40.7 () Int)
(declare-fun locColon_144.25.13 () Int)
(declare-fun type_pre_145.18.28 () Int)
(declare-fun BOOLEANLIT_15.38.26 () Int)
(declare-fun LBRACE_14.35.26 () Int)
(declare-fun elementCount_116.6_146.23 () Int)
(declare-fun PARENEXPR_pre_17.54.7 () Int)
(declare-fun FLOATTYPE_pre_15.31.26 () Int)
(declare-fun THIS_14.94.26 () Int)
(declare-fun BLOCKSTMT_17.25.7 () Int)
(declare-fun seqCatchClause_pre_76.46 () Int)
(declare-fun locOpenBrace_133.36.13 () Int)
(declare-fun arrayParent (Int) Int)
(declare-fun count_pre_160.67.33 () Int)
(declare-fun MOD_pre_16.36.26 () Int)
(declare-fun l_110.33 () Int)
(declare-fun seqStmt_pre_70.46 () Int)
(declare-fun count_62.67.33 () Int)
(declare-fun nameDotLocs_5.65.28 () Int)
(declare-fun count_53.67.33 () Int)
(declare-fun T_javafe.tc.TagConstants () Int)
(declare-fun locDot_58.41.13 () Int)
(declare-fun FIELD_pre_14.45.26 () Int)
(declare-fun locCloseBrace_69.24.13 () Int)
(declare-fun elemtype (Int) Int)
(declare-fun enclosingInstance_pre_58.37.14 () Int)
(declare-fun BITNOT_16.57.26 () Int)
(declare-fun type_pre_66.35.28 () Int)
(declare-fun boolImplies (Int Int) Bool)
(declare-fun FIELDACCESS_pre_17.57.7 () Int)
(declare-fun DEC_16.59.26 () Int)
(declare-fun DOUBLELIT_pre_15.43.26 () Int)
(declare-fun SUB_pre_16.34.26 () Int)
(declare-fun op_pre_75.26.13 () Int)
(declare-fun locDot_152.23.13 () Int)
(declare-fun T_java.lang.Object () Int)
(declare-fun FORMALPARADECL_pre_17.24.7 () Int)
(declare-fun SINGLETYPEIMPORTDECL_pre_17.15.7 () Int)
(declare-fun LEXICALPRAGMA_14.24.26 () Int)
(declare-fun classDown (Int Int) Int)
(declare-fun loc_13.45.13 () Int)
(declare-fun T_javafe.ast.TryFinallyStmt () Int)
(declare-fun T_javafe.ast.ASTNode () Int)
(declare-fun elemType_156.18.28 () Int)
(declare-fun T_javafe.ast.CondExpr () Int)
(declare-fun tmp1_seqStmt_117.26 () Int)
(declare-fun SWITCHSTMT_17.26.7 () Int)
(declare-fun EC_77.3_77.3 () Int)
(declare-fun SHORTTYPE_pre_15.36.26 () Int)
(declare-fun locColon_pre_144.25.13 () Int)
(declare-fun locId_149.24.13 () Int)
(declare-fun INTERFACEDECL_pre_17.18.7 () Int)
(declare-fun locOpenParen_pre_151.28.13 () Int)
(declare-fun locSuper_pre_155.20.13 () Int)
(declare-fun DEC_pre_16.59.26 () Int)
(declare-fun locId_133.43.13 () Int)
(declare-fun op_pre_74.35.13 () Int)
(declare-fun locOpenBrace_pre_69.21.13 () Int)
(declare-fun seqTypeDeclElem_4.1161.46 () Int)
(declare-fun SYNCHRONIZESTMT_pre_17.31.7 () Int)
(declare-fun T_javafe.ast.CompoundName () Int)
(declare-fun INTLIT_15.39.26 () Int)
(declare-fun EQ_pre_16.25.26 () Int)
(declare-fun elements_pre_160.61.47 () Int)
(declare-fun LONGLIT_15.40.26 () Int)
(declare-fun EOF_pre_14.17.26 () Int)
(declare-fun T_javafe.ast.TypeDecl () Int)
(declare-fun m_in_9.212.46 () Int)
(declare-fun CONTINUESTMT_17.36.7 () Int)
(declare-fun T_javafe.ast.ClassLiteral () Int)
(declare-fun T_javafe.ast.TypeName () Int)
(declare-fun NULL_pre_14.82.26 () Int)
(declare-fun T_javafe.ast.SimpleName () Int)
(declare-fun T_javafe.tc.TypeSig () Int)
(declare-fun UNARYADD_16.54.26 () Int)
(declare-fun RETURN_14.87.26 () Int)
(declare-fun FLOATLIT_15.42.26 () Int)
(declare-fun keywordStrings_pre_14.181.30 () Int)
(declare-fun locOp_75.32.13 () Int)
(declare-fun intShiftL (Int Int) Int)
(declare-fun T_java.util.Dictionary () Int)
(declare-fun INITBLOCK_pre_17.21.7 () Int)
(declare-fun RBRACE_14.36.26 () Int)
(declare-fun boolAnd (Int Int) Bool)
(declare-fun POSTFIXINC_pre_16.62.26 () Int)
(declare-fun locCloseBrace_13.54.13 () Int)
(declare-fun elementType_61.24 () Int)
(declare-fun loc_50.33.13 () Int)
(declare-fun elems () Int)
(declare-fun CASTEXPR_pre_17.53.7 () Int)
(declare-fun SWITCHLABEL_pre_17.41.7 () Int)
(declare-fun loc_pre_49.20.13 () Int)
(declare-fun ids_159.19.37 () Int)
(declare-fun T_javafe.parser.TagConstants () Int)
(declare-fun locOpenParen_58.48.13 () Int)
(declare-fun dims_pre_143.45.31 () Int)
(declare-fun WHILESTMT_pre_17.29.7 () Int)
(declare-fun body_133.34.19 () Int)
(declare-fun CHARTYPE_15.30.26 () Int)
(declare-fun loc_48.20.13 () Int)
(declare-fun DOUBLELIT_15.43.26 () Int)
(declare-fun nameDotLocs_pre_5.65.28 () Int)
(declare-fun currentStackBottom_116.6_146.45 () Int)
(declare-fun T_javafe.ast.NewArrayExpr () Int)
(declare-fun EC_127.14_127.14 () Int)
(declare-fun CASE_pre_14.56.26 () Int)
(declare-fun T_javafe.ast.ArrayRefExpr () Int)
(declare-fun locOpenBrace_pre_133.36.13 () Int)
(declare-fun T_javafe.ast.TypeDeclElem () Int)
(declare-fun BYTETYPE_pre_15.35.26 () Int)
(declare-fun T_javafe.ast.StmtVec () Int)
(declare-fun EC_112.13_112.13 () Int)
(declare-fun count_pre_158.67.33 () Int)
(declare-fun fClosedTime (Int) Int)
(declare-fun RETURNSTMT_17.33.7 () Int)
(declare-fun INC_pre_16.58.26 () Int)
(declare-fun FIRST_KEYWORD_14.51.26 () Int)
(declare-fun T_javafe.ast.TagConstants () Int)
(declare-fun locDot_135.21.13 () Int)
(declare-fun SYNCHRONIZESTMT_17.31.7 () Int)
(declare-fun identifierVal_pre_10.80.22 () Int)
(declare-fun COMPOUNDNAME_pre_17.67.7 () Int)
(declare-fun punctuationStrings_pre_14.134.22 () Int)
(declare-fun AMBIGUOUSVARIABLEACCESS_17.55.7 () Int)
(declare-fun T_javafe.ast.InterfaceDecl () Int)
(declare-fun superCall_pre_58.24.17 () Int)
(declare-fun owner_62.24 () Int)
(declare-fun SYNCHRONIZED_pre_14.93.26 () Int)
(declare-fun IDENT_pre_15.25.26 () Int)
(declare-fun locOpenBrackets_143.65.29 () Int)
(declare-fun T_javafe.ast.ThrowStmt () Int)
(declare-fun longLast () Int)
(declare-fun T_javafe.ast.Expr () Int)
(declare-fun locId_37.20.13 () Int)
(declare-fun locOpenBrace_pre_13.51.13 () Int)
(declare-fun T_javafe.ast.ContinueStmt () Int)
(declare-fun loc_54.23.13 () Int)
(declare-fun elementType_8.43.27 () Int)
(declare-fun NULLLIT_pre_15.45.26 () Int)
(declare-fun T_javafe.ast.ForStmt () Int)
(declare-fun T_javafe.ast.OnDemandImportDecl () Int)
(declare-fun identifierVal_10.80.22 () Int)
(declare-fun nonnullelements (Int Int) Bool)
(declare-fun T_javafe.ast.ModifierPragmaVec () Int)
(declare-fun ELSE_14.65.26 () Int)
(declare-fun DEFAULT_pre_14.62.26 () Int)
(declare-fun locOp_pre_75.32.13 () Int)
(declare-fun T_javafe.ast.TryCatchStmt () Int)
(declare-fun IFSTMT_17.38.7 () Int)
(declare-fun CLASSLITERAL_pre_17.60.7 () Int)
(declare-fun startingLoc_10.65.15 () Int)
(declare-fun SWITCHLABEL_17.41.7 () Int)
(declare-fun loc_pre_52.20.13 () Int)
(declare-fun eClosedTime (Int) Int)
(declare-fun NEWARRAYEXPR_pre_17.50.7 () Int)
(declare-fun LAST_KEYWORD_14.103.26 () Int)
(declare-fun init_143.35.19 () Int)
(declare-fun SUPER_pre_14.91.26 () Int)
(declare-fun result_117.6 () Int)
(declare-fun AND_16.20.26 () Int)
(declare-fun vectorCount_114.14_8.282.17 () Int)
(declare-fun BREAK_pre_14.54.26 () Int)
(declare-fun COMPILATIONUNIT_pre_17.14.7 () Int)
(declare-fun ADD_pre_16.33.26 () Int)
(declare-fun locOpenBrace_29.22.13 () Int)
(declare-fun after_127.14_127.14_8.296.17 () Int)
(declare-fun CATCHCLAUSE_17.45.7 () Int)
(declare-fun currentStackBottom_127.14_8.298.31 () Int)
(declare-fun refEQ (Int Int) Int)
(declare-fun EQ_16.25.26 () Int)
(declare-fun divides (Int Int) Int)
(declare-fun T_javafe.ast.ReturnStmt () Int)
(declare-fun locId_pre_66.38.13 () Int)
(declare-fun stringCat (Int Int) Int)
(declare-fun loc_123.30.13 () Int)
(declare-fun INTTYPE_pre_15.28.26 () Int)
(declare-fun elements_129.61.39 () Int)
(declare-fun LT_16.29.26 () Int)
(declare-fun seqStmt_zero () Int)
(declare-fun locCloseBracket_141.23.13 () Int)
(declare-fun IDENT_15.25.26 () Int)
(declare-fun T_java.lang.Double () Int)
(declare-fun locOp_74.43.13 () Int)
(declare-fun ONDEMANDIMPORTDECL_pre_17.16.7 () Int)
(declare-fun SHORTTYPE_15.36.26 () Int)
(declare-fun TYPENAME_17.64.7 () Int)
(declare-fun locKeyword_pre_58.45.13 () Int)
(declare-fun startingLoc_pre_10.65.15 () Int)
(declare-fun loc_64.22.13 () Int)
(declare-fun T_javafe.ast.TypeObjectDesignator () Int)
(declare-fun ASGURSHIFT_16.48.26 () Int)
(declare-fun TYPEMODIFIERPRAGMA_pre_14.28.26 () Int)
(declare-fun ASGMUL_pre_16.41.26 () Int)
(declare-fun locOpenBracket_156.21.13 () Int)
(declare-fun T_float () Int)
(declare-fun CONSTRUCTORINVOCATION_pre_17.44.7 () Int)
(declare-fun locDot_pre_142.29.13 () Int)
(declare-fun tmp1_seqStmt_59.9 () Int)
(declare-fun isAllocated (Int Int) Bool)
(declare-fun T_javafe.ast.ClassDecl () Int)
(declare-fun COMPILATIONUNIT_17.14.7 () Int)
(declare-fun WHILE_pre_14.102.26 () Int)
(declare-fun locOpenParen_pre_52.23.13 () Int)
(declare-fun seqExpr_4.1145.46 () Int)
(declare-fun ASSIGN_pre_16.40.26 () Int)
(declare-fun COMMA_14.33.26 () Int)
(declare-fun T_javafe.ast.IfStmt () Int)
(declare-fun elems_pre () Int)
(declare-fun loc_pre_51.18.13 () Int)
(declare-fun after_71.3_71.3 () Int)
(declare-fun STRINGLIT_pre_15.44.26 () Int)
(declare-fun locCloseBrace_pre_29.25.13 () Int)
(declare-fun locGuardOpenParen_49.23.13 () Int)
(declare-fun STMTPRAGMA_14.26.26 () Int)
(declare-fun VARDECLSTMT_pre_17.27.7 () Int)
(declare-fun store1 (Int Int Int) Int)
(declare-fun store2 (Int Int Int Int) Int)
(declare-fun BREAKSTMT_pre_17.35.7 () Int)
(declare-fun FOR_pre_14.71.26 () Int)
(declare-fun OR_16.19.26 () Int)
(declare-fun syntax_39.28.29 () Int)
(declare-fun locType_pre_132.21.13 () Int)
(declare-fun T_javafe.ast.SynchronizeStmt () Int)
(declare-fun select1 (Int Int) Int)
(declare-fun select2 (Int Int Int) Int)
(declare-fun T_javafe.ast.MethodDecl () Int)
(declare-fun type_66.35.28 () Int)
(declare-fun seqIdentifier_pre_5.33.46 () Int)
(declare-fun ASGADD_16.44.26 () Int)
(declare-fun longShiftL (Int Int) Int)
(declare-fun multiply (Int Int) Int)
(declare-fun int_m2147483648 () Int)
(declare-fun T_java.lang.Class () Int)
(declare-fun LONGTYPE_15.29.26 () Int)
(declare-fun ASGBITXOR_16.51.26 () Int)
(declare-fun ASGREM_16.43.26 () Int)
(declare-fun BITOR_16.21.26 () Int)
(declare-fun refNE (Int Int) Int)
(declare-fun punctuationCodes_pre_14.164.19 () Int)
(declare-fun locOpenParen_147.18.13 () Int)
(declare-fun CATCH_pre_14.57.26 () Int)
(declare-fun SEMICOLON_14.34.26 () Int)
(declare-fun TRYCATCHSTMT_17.43.7 () Int)
(declare-fun this () Int)
(declare-fun locOpenParen_pre_146.21.13 () Int)
(declare-fun locId_pre_13.48.13 () Int)
(declare-fun T_javafe.ast.ConstructorDecl () Int)
(declare-fun loc_pre_48.20.13 () Int)
(declare-fun type_152.20.28 () Int)
(declare-fun classLiteral (Int) Int)
(declare-fun modulo (Int Int) Int)
(declare-fun alloc () Int)
(declare-fun T_javafe.ast.FieldAccess () Int)
(declare-fun loc_137.18.13 () Int)
(declare-fun FIELD_14.45.26 () Int)
(declare-fun EVALSTMT_pre_17.32.7 () Int)
(declare-fun loc_pre_148.22.13 () Int)
(declare-fun integralEQ (Int Int) Int)
(declare-fun elements_8.72.21 () Int)
(declare-fun vAllocTime (Int) Int)
(declare-fun locOpenBracket_pre_141.20.13 () Int)
(declare-fun LE_pre_16.28.26 () Int)
(declare-fun locOpenBrace_69.21.13 () Int)
(declare-fun locDots_159.31.29 () Int)
(declare-fun LAST_KEYWORD_pre_14.103.26 () Int)
(declare-fun T_javafe.ast.MethodInvocation () Int)
(declare-fun EC_114.14_114.14 () Int)
(declare-fun seqVarInit_pre_4.1153.46 () Int)
(declare-fun EC_118.18_118.18 () Int)
(declare-fun LSHIFT_16.30.26 () Int)
(declare-fun loc_pre_54.23.13 () Int)
(declare-fun loc_pre_63.29.13 () Int)
(declare-fun locIds_pre_159.25.29 () Int)
(declare-fun integralGE (Int Int) Int)
(declare-fun returnType_132.18.28 () Int)
(declare-fun T_javafe.ast.RoutineDecl () Int)
(declare-fun integralGT (Int Int) Int)
(declare-fun after_114.14_114.14_8.282.17 () Int)
(declare-fun vectorCount_pre_8.97.33 () Int)
(declare-fun enclosingInstance_142.25.14 () Int)
(declare-fun T_javafe.util.StackVector () Int)
(declare-fun NOT_16.56.26 () Int)
(declare-fun elements_160.61.47 () Int)
(declare-fun nameIdLocs_pre_5.62.28 () Int)
(declare-fun FORSTMT_pre_17.39.7 () Int)
(declare-fun DOSTMT_pre_17.30.7 () Int)
(declare-fun seqModifierPragma_pre_6.74.32 () Int)
(declare-fun m_in_pre_9.212.46 () Int)
(declare-fun UNARYSUB_16.55.26 () Int)
(declare-fun AMBIGUOUSMETHODINVOCATION_pre_17.58.7 () Int)
(declare-fun op_74.35.13 () Int)
(declare-fun BYTETYPE_15.35.26 () Int)
(declare-fun asElems (Int) Int)
(declare-fun after_114.14_114.14_8.282.30 () Int)
(declare-fun loc_pre_32.16.13 () Int)
(declare-fun BITNOT_pre_16.57.26 () Int)
(declare-fun LOCALVARDECL_17.22.7 () Int)
(declare-fun NE_16.24.26 () Int)
(declare-fun lockLE (Int Int) Bool)
(declare-fun tag_71.30.13 () Int)
(declare-fun T_javafe.ast.EvalStmt () Int)
(declare-fun BITOR_pre_16.21.26 () Int)
(declare-fun lockLT (Int Int) Bool)
(declare-fun BITXOR_16.22.26 () Int)
(declare-fun VARIABLEACCESS_pre_17.56.7 () Int)
(declare-fun locCloseBracket_pre_141.23.13 () Int)
(declare-fun T_javafe.ast.ExprVec () Int)
(declare-fun T_java.lang.Boolean () Int)
(declare-fun BREAK_14.54.26 () Int)
(declare-fun EC_117.34_117.34 () Int)
(declare-fun tag_61.32.13 () Int)
(declare-fun elements_59.61.33 () Int)
(declare-fun T_javafe.ast.CatchClauseVec () Int)
(declare-fun locCloseParen_147.21.13 () Int)
(declare-fun SWITCHSTMT_pre_17.26.7 () Int)
(declare-fun noTokens_pre_14.212.27 () Int)
(declare-fun locFirstSemi_pre_50.36.13 () Int)
(declare-fun RETURNSTMT_pre_17.33.7 () Int)
(declare-fun EC_123.1_123.1 () Int)
(declare-fun arrayShapeOne (Int) Int)
(declare-fun DO_14.63.26 () Int)
(declare-fun BLOCKSTMT_pre_17.25.7 () Int)
(declare-fun DO_pre_14.63.26 () Int)
(declare-fun locFirstSemi_50.36.13 () Int)
(declare-fun integralLE (Int Int) Int)
(declare-fun T_javafe.ast.DoStmt () Int)
(declare-fun locCloseBrace_pre_69.24.13 () Int)
(declare-fun locCloseParen_146.24.13 () Int)
(declare-fun locOpenParen_142.52.13 () Int)
(declare-fun locOpenBrace_13.51.13 () Int)
(declare-fun ids_pre_159.19.37 () Int)
(declare-fun integralLT (Int Int) Int)
(declare-fun T_javafe.ast.BreakStmt () Int)
(declare-fun type_pre_152.20.28 () Int)
(declare-fun loc_pre_123.30.13 () Int)
(declare-fun NEWINSTANCEEXPR_17.49.7 () Int)
(declare-fun AMBIGUOUSVARIABLEACCESS_pre_17.55.7 () Int)
(declare-fun elements_128.61.38 () Int)
(declare-fun TRYCATCHSTMT_pre_17.43.7 () Int)
(declare-fun T_javafe.parser.ParseStmt () Int)
(declare-fun after_57.23_57.23 () Int)
(declare-fun ARRAYTYPE_17.65.7 () Int)
(declare-fun loc_46.18.13 () Int)
(declare-fun T_javafe.ast.Type () Int)
(declare-fun THROW_pre_14.95.26 () Int)
(declare-fun keywordStrings_14.181.30 () Int)
(declare-fun THROWSTMT_pre_17.34.7 () Int)
(declare-fun loc_pre_64.22.13 () Int)
(declare-fun currentStackBottom_pre_8.87.33 () Int)
(declare-fun elements_57.61.43 () Int)
(declare-fun dims_143.45.31 () Int)
(declare-fun locId_pre_151.25.13 () Int)
(declare-fun integralNE (Int Int) Int)
(declare-fun loc_pre_55.22.13 () Int)
(declare-fun elements_pre_59.61.33 () Int)
(declare-fun loc_pre_45.18.13 () Int)
(declare-fun T_javafe.ast.ThisExpr () Int)
(declare-fun OR_pre_16.19.26 () Int)
(declare-fun T_javafe.ast.FormalParaDecl () Int)
(declare-fun METHODDECL_17.20.7 () Int)
(declare-fun T_java.lang.Long () Int)
(declare-fun seqCatchClause_76.46_1_ () Int)
(declare-fun ASGBITXOR_pre_16.51.26 () Int)
(declare-fun DIV_pre_16.35.26 () Int)
(declare-fun EVALSTMT_17.32.7 () Int)
(declare-fun T_javafe.ast.TypeModifierPragmaVec () Int)
(declare-fun RPAREN_pre_14.38.26 () Int)
(declare-fun CLASSDECLSTMT_pre_17.28.7 () Int)
(declare-fun CONDEXPR_17.51.7 () Int)
(declare-fun T_javafe.ast.LocalVarDecl () Int)
(declare-fun elements_62.61.33 () Int)
(declare-fun T_javafe.ast.CastExpr () Int)
(declare-fun seqCatchClause_76.46_2_ () Int)
(declare-fun loc_51.18.13 () Int)
(declare-fun T_javafe.ast.ConstructorInvocation () Int)
(declare-fun TRY_14.99.26 () Int)
(declare-fun NE_pre_16.24.26 () Int)
(declare-fun FORSTMT_17.39.7 () Int)
(declare-fun int_4294967295 () Int)
(declare-fun T_java.io.Serializable () Int)
(declare-fun integralOr (Int Int) Int)
(declare-fun T_javafe.ast.FieldDecl () Int)
(declare-fun ASGDIV_pre_16.42.26 () Int)
(declare-fun TYPESIG_pre_76.6.28 () Int)
(declare-fun elements_pre_57.61.43 () Int)
(declare-fun count_129.67.33 () Int)
(declare-fun seqCatchClause_76.46 () Int)
(declare-fun FLOATLIT_pre_15.42.26 () Int)
(declare-fun seqIdentifier_5.33.46 () Int)
(declare-fun seqVarInit_4.1153.46 () Int)
(declare-fun elements_158.61.39 () Int)
(declare-fun THIS_pre_14.94.26 () Int)
(declare-fun T_javafe.ast.OperatorTags () Int)
(declare-fun WHILE_14.102.26 () Int)
(declare-fun T_javafe.ast.SwitchStmt () Int)
(declare-fun punctuationStrings_14.134.22 () Int)
(declare-fun null () Int)
(declare-fun METHODINVOCATION_17.59.7 () Int)
(declare-fun MODIFIERPRAGMA_pre_14.25.26 () Int)
(declare-fun T_char () Int)
(declare-fun elements_pre_62.61.33 () Int)
(declare-fun int_18446744073709551615 () Int)
(declare-fun elemType_pre_156.18.28 () Int)
(declare-fun NULL_12.60.26 () Int)
(declare-fun EC () Int)
(declare-fun locGuardOpenParen_pre_49.23.13 () Int)
(declare-fun owner_7.35.28 () Int)
(declare-fun loc_148.22.13 () Int)
(declare-fun T_javafe.parser.PunctuationPrefixTree () Int)
(declare-fun elements_pre_53.61.40 () Int)
(declare-fun LABELSTMT_pre_17.37.7 () Int)
(declare-fun T_java.util.Map () Int)
(declare-fun loc_pre_61.50.13 () Int)
(declare-fun CLASS_14.59.26 () Int)
(declare-fun locFinally_55.25.13 () Int)
(declare-fun asLockSet (Int) Int)
(declare-fun locSuper_155.20.13 () Int)
(declare-fun FINALLY_14.69.26 () Int)
(declare-fun T_java.lang.Number () Int)
(declare-fun vectorCount_8.97.33 () Int)
(declare-fun T_javafe.ast.SkipStmt () Int)
(declare-fun DEFAULT_14.62.26 () Int)
(declare-fun subtypes (Int Int) Bool)
(declare-fun currentStackBottom_8.87.33 () Int)
(declare-fun loc_pre_137.18.13 () Int)
(declare-fun owner_pre_7.35.28 () Int)
(declare-fun ASSIGN_16.40.26 () Int)
(declare-fun GE_pre_16.26.26 () Int)
(declare-fun loc_63.29.13 () Int)
(declare-fun SKIPSTMT_pre_17.40.7 () Int)
(declare-fun AND_pre_16.20.26 () Int)
(declare-fun T_int () Int)
(declare-fun EC_119.1_119.1 () Int)
(declare-fun CLASSLITERAL_17.60.7 () Int)
(declare-fun CONSTRUCTORDECL_pre_17.19.7 () Int)
(declare-fun elementCount_127.14_8.298.17 () Int)
(declare-fun EC_71.3_71.3 () Int)
(declare-fun SUPER_14.91.26 () Int)
(declare-fun max (Int) Int)
(declare-fun name_35.20.28 () Int)
(declare-fun RES_71.3_71.3 () Int)
(declare-fun EOF_14.17.26 () Int)
(declare-fun ASGRSHIFT_pre_16.47.26 () Int)
(declare-fun T_javafe.ast.IdentifierVec () Int)
(declare-fun T_javafe.ast.SwitchLabel () Int)
(declare-fun otherStrings_14.193.30 () Int)
(declare-fun ADD_16.33.26 () Int)
(declare-fun CLASSDECL_pre_17.17.7 () Int)
(declare-fun NULL_pre_12.60.26 () Int)
(declare-fun ASGSUB_16.45.26 () Int)
(declare-fun T_boolean () Int)
(declare-fun PARENEXPR_17.54.7 () Int)
(declare-fun superCall_58.24.17 () Int)
(declare-fun locCloseParen_pre_147.21.13 () Int)
(declare-fun code_9.1294.15 () Int)
(declare-fun WHILESTMT_17.29.7 () Int)
(declare-fun elements_pre_8.72.21 () Int)
(declare-fun loc_32.16.13 () Int)
(declare-fun LPAREN_pre_14.37.26 () Int)
(declare-fun CATCHCLAUSE_pre_17.45.7 () Int)
(declare-fun ARRAYINIT_pre_17.46.7 () Int)
(declare-fun otherCodes_14.202.27 () Int)
(declare-fun noTokens_14.212.27 () Int)
(declare-fun T_javafe.ast.VarInit () Int)
(declare-fun T_.TYPE () Int)
(declare-fun T_javafe.ast.WhileStmt () Int)
(declare-fun this_127.14_127.14 () Int)
(declare-fun locCloseParen_pre_146.24.13 () Int)
(declare-fun LS () Int)
(declare-fun FIRST_KEYWORD_pre_14.51.26 () Int)
(declare-fun STAR_pre_16.37.26 () Int)
(declare-fun T_double () Int)
(declare-fun GT_16.27.26 () Int)
(declare-fun nameIdLocs_5.62.28 () Int)
(declare-fun CASE_14.56.26 () Int)
(declare-fun INTTYPE_15.28.26 () Int)
(declare-fun T_javafe.ast.ModifierPragma () Int)
(declare-fun loc_133.40.13 () Int)
(declare-fun T_javafe.ast.GenericBlockStmt () Int)
(declare-fun SYNCHRONIZED_14.93.26 () Int)
(declare-fun arrayShapeMore (Int Int) Int)
(declare-fun locId_pre_37.20.13 () Int)
(declare-fun loc_115.6 () Int)
(declare-fun boolEq (Int Int) Bool)
(declare-fun ecReturn () Int)
(declare-fun arrayLength (Int) Int)
(declare-fun vectorCount_127.14_8.296.17 () Int)
(declare-fun ASGLSHIFT_16.46.26 () Int)
(declare-fun POSTFIXDEC_16.63.26 () Int)
(declare-fun T_long () Int)
(declare-fun EC_1_ () Int)
(declare-fun count_pre_59.67.33 () Int)
(declare-fun locKeyword_58.45.13 () Int)
(declare-fun RES_112.13_112.13 () Int)
(declare-fun STAR_16.37.26 () Int)
(declare-fun locOpenBrace_pre_29.22.13 () Int)
(declare-fun otherCodes_pre_14.202.27 () Int)
(declare-fun elements_pre_129.61.39 () Int)
(declare-fun type_143.24.28 () Int)
(declare-fun loc_pre_46.18.13 () Int)
(declare-fun arrayPosition (Int) Int)
(declare-fun locOpenParen_pre_58.48.13 () Int)
(declare-fun IF_14.73.26 () Int)
(declare-fun T_javafe.ast.SuperObjectDesignator () Int)
(declare-fun RES_123.1_123.1 () Int)
(declare-fun loc_pre_47.22.13 () Int)
(declare-fun loc_55.22.13 () Int)
(declare-fun CHARLIT_15.41.26 () Int)
(declare-fun punctuationCodes_14.164.19 () Int)
(declare-fun FIELDDECL_17.23.7 () Int)
(declare-fun loc_45.18.13 () Int)
(declare-fun T_javafe.ast.BlockStmt () Int)
(declare-fun count_pre_57.67.33 () Int)
(declare-fun T_javafe.ast.LiteralExpr () Int)
(declare-fun loc_145.21.13 () Int)
(declare-fun CONTINUESTMT_pre_17.36.7 () Int)
(declare-fun T_javafe.ast.UnaryExpr () Int)
(declare-fun array (Int) Int)
(declare-fun GT_pre_16.27.26 () Int)
(declare-fun T_java.lang.Float () Int)
(declare-fun integralXor (Int Int) Int)
(declare-fun COMPOUNDNAME_17.67.7 () Int)
(declare-fun loc_43.18.13 () Int)
(declare-fun locDot_142.29.13 () Int)
(declare-fun CONTINUE_pre_14.61.26 () Int)
(declare-fun T_javafe.ast.VarDeclStmt () Int)
(declare-fun ASGSUB_pre_16.45.26 () Int)
(declare-fun cast (Int Int) Int)
(declare-fun TRY_pre_14.99.26 () Int)
(declare-fun boolNot (Int) Bool)
(declare-fun integralDiv (Int Int) Int)
(declare-fun locOpenBracket_pre_156.21.13 () Int)
(declare-fun enclosingInstance_58.37.14 () Int)
(declare-fun NULLTYPE_15.34.26 () Int)
(declare-fun syntax_pre_39.28.29 () Int)
(declare-fun after_116.6_116.6_146.15 () Int)
(declare-fun T_javafe.parser.ParseExpr () Int)
(declare-fun elementType_58.17 () Int)
(declare-fun count_pre_62.67.33 () Int)
(declare-fun alloc_pre () Int)
(declare-fun locOpenBrackets_pre_143.65.29 () Int)
(declare-fun T_javafe.ast.Identifier () Int)
(declare-fun integralAnd (Int Int) Int)
(declare-fun T_javafe.ast.StmtPragma () Int)
(declare-fun count_pre_53.67.33 () Int)
(declare-fun count_128.67.33 () Int)
(declare-fun T_javafe.ast.ArrayType () Int)
(declare-fun locOp_pre_74.43.13 () Int)
(declare-fun ASGLSHIFT_pre_16.46.26 () Int)
(declare-fun ttype_pre_10.52.15 () Int)
(declare-fun locOpenParen_150.30.13 () Int)
(declare-fun seqStmt_70.46_1_ () Int)
(declare-fun NOT_pre_16.56.26 () Int)
(declare-fun ttype_10.52.15 () Int)
(declare-fun after_127.14_127.14_8.298.17 () Int)
(declare-fun locOpenParen_pre_147.18.13 () Int)
(declare-fun tmp2_cor_118.10 () Bool)
(declare-fun after_116.6_116.6_146.37 () Int)
(declare-fun endingLoc_pre_10.72.15 () Int)
(declare-fun length_36.50.25 () Int)
(declare-fun seqStmt_70.46_2_ () Int)
(declare-fun T_javafe.ast.AmbiguousMethodInvocation () Int)
(declare-fun NULLTYPE_pre_15.34.26 () Int)
(declare-fun LPAREN_14.37.26 () Int)
(declare-fun loc_157.20.13 () Int)
(declare-fun boolNE (Int Int) Bool)
(declare-fun STRINGLIT_15.44.26 () Int)
(declare-fun CHARLIT_pre_15.41.26 () Int)
(declare-fun loc_61.50.13 () Int)
(declare-fun URSHIFT_16.32.26 () Int)
(declare-fun BOOLEANLIT_pre_15.38.26 () Int)
(declare-fun objectToBeConstructed () Int)
(declare-fun INSTANCEOFEXPR_17.52.7 () Int)
(declare-fun T_javafe.ast.ASTDecoration () Int)
(declare-fun after_127.14_127.14_8.298.31 () Int)
(declare-fun NULL_14.82.26 () Int)
(declare-fun owner_59.17 () Int)
(declare-fun ARRAYREFEXPR_17.48.7 () Int)
(declare-fun T_javafe.ast.ImportDecl () Int)
(declare-fun tmp2_cor_118.30 () Int)
(declare-fun TYPEOBJECTDESIGNATOR_pre_17.62.7 () Int)
(declare-fun T_javafe.tc.MethodDeclVec () Int)
(declare-fun elementType_pre_8.43.27 () Int)
(declare-fun locDot_pre_152.23.13 () Int)
(declare-fun bool_false () Int)
(declare-fun type_pre_143.24.28 () Int)
(declare-fun ASGRSHIFT_16.47.26 () Int)
(assert (subtypes T_javafe.ast.CompoundName T_javafe.ast.Name))
(assert (= T_javafe.ast.CompoundName (asChild T_javafe.ast.CompoundName T_javafe.ast.Name)))
(assert (subtypes T_javafe.parser.PunctuationPrefixTree T_java.lang.Object))
(assert (= T_javafe.parser.PunctuationPrefixTree (asChild T_javafe.parser.PunctuationPrefixTree T_java.lang.Object)))
(assert (subtypes T_javafe.ast.VariableAccess T_javafe.ast.Expr))
(assert (= T_javafe.ast.VariableAccess (asChild T_javafe.ast.VariableAccess T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.InitBlock T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.InitBlock (asChild T_javafe.ast.InitBlock T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.InitBlock T_javafe.ast.TypeDeclElem))
(assert (subtypes T_javafe.ast.VarDeclStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.VarDeclStmt (asChild T_javafe.ast.VarDeclStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.ExprVec T_java.lang.Object))
(assert (= T_javafe.ast.ExprVec (asChild T_javafe.ast.ExprVec T_java.lang.Object)))
(assert (subtypes T_javafe.parser.Token T_java.lang.Object))
(assert (= T_javafe.parser.Token (asChild T_javafe.parser.Token T_java.lang.Object)))
(assert (subtypes T_javafe.ast.Type T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.Type (asChild T_javafe.ast.Type T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.ClassDeclStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.ClassDeclStmt (asChild T_javafe.ast.ClassDeclStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.NewArrayExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.NewArrayExpr (asChild T_javafe.ast.NewArrayExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.WhileStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.WhileStmt (asChild T_javafe.ast.WhileStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.ModifierPragmaVec T_java.lang.Object))
(assert (= T_javafe.ast.ModifierPragmaVec (asChild T_javafe.ast.ModifierPragmaVec T_java.lang.Object)))
(assert (subtypes T_javafe.ast.ThrowStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.ThrowStmt (asChild T_javafe.ast.ThrowStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.TypeDeclElemPragma T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.TypeDeclElemPragma (asChild T_javafe.ast.TypeDeclElemPragma T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.TypeDeclElemPragma T_javafe.ast.TypeDeclElem))
(assert (subtypes T_javafe.ast.StmtVec T_java.lang.Object))
(assert (= T_javafe.ast.StmtVec (asChild T_javafe.ast.StmtVec T_java.lang.Object)))
(assert (subtypes T_javafe.ast.UnaryExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.UnaryExpr (asChild T_javafe.ast.UnaryExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.parser.ParseUtil T_java.lang.Object))
(assert (= T_javafe.parser.ParseUtil (asChild T_javafe.parser.ParseUtil T_java.lang.Object)))
(assert (subtypes T_javafe.ast.LocalVarDecl T_javafe.ast.GenericVarDecl))
(assert (= T_javafe.ast.LocalVarDecl (asChild T_javafe.ast.LocalVarDecl T_javafe.ast.GenericVarDecl)))
(assert (subtypes T_javafe.ast.CompilationUnit T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.CompilationUnit (asChild T_javafe.ast.CompilationUnit T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.ParenExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.ParenExpr (asChild T_javafe.ast.ParenExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.IdentifierVec T_java.lang.Object))
(assert (= T_javafe.ast.IdentifierVec (asChild T_javafe.ast.IdentifierVec T_java.lang.Object)))
(assert (subtypes T_javafe.ast.GenericBlockStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.GenericBlockStmt (asChild T_javafe.ast.GenericBlockStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.util.CorrelatedReader T_java.lang.Object))
(assert (= T_javafe.util.CorrelatedReader (asChild T_javafe.util.CorrelatedReader T_java.lang.Object)))
(assert (subtypes T_javafe.ast.MethodDecl T_javafe.ast.RoutineDecl))
(assert (= T_javafe.ast.MethodDecl (asChild T_javafe.ast.MethodDecl T_javafe.ast.RoutineDecl)))
(assert (subtypes T_javafe.ast.SimpleName T_javafe.ast.Name))
(assert (= T_javafe.ast.SimpleName (asChild T_javafe.ast.SimpleName T_javafe.ast.Name)))
(assert (subtypes T_javafe.ast.FormalParaDecl T_javafe.ast.GenericVarDecl))
(assert (= T_javafe.ast.FormalParaDecl (asChild T_javafe.ast.FormalParaDecl T_javafe.ast.GenericVarDecl)))
(assert (subtypes T_javafe.ast.BlockStmt T_javafe.ast.GenericBlockStmt))
(assert (= T_javafe.ast.BlockStmt (asChild T_javafe.ast.BlockStmt T_javafe.ast.GenericBlockStmt)))
(assert (subtypes T_java.lang.Integer T_java.lang.Number))
(assert (= T_java.lang.Integer (asChild T_java.lang.Integer T_java.lang.Number)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_java.lang.Integer) (= ?t T_java.lang.Integer)) :pattern ((subtypes ?t T_java.lang.Integer)) )))
(assert (subtypes T_java.lang.Integer T_java.lang.Comparable))
(assert (subtypes T_javafe.ast.InterfaceDecl T_javafe.ast.TypeDecl))
(assert (= T_javafe.ast.InterfaceDecl (asChild T_javafe.ast.InterfaceDecl T_javafe.ast.TypeDecl)))
(assert (subtypes T_javafe.ast.ImportDecl T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.ImportDecl (asChild T_javafe.ast.ImportDecl T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.NewInstanceExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.NewInstanceExpr (asChild T_javafe.ast.NewInstanceExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.TypeName T_javafe.ast.Type))
(assert (= T_javafe.ast.TypeName (asChild T_javafe.ast.TypeName T_javafe.ast.Type)))
(assert (subtypes T_javafe.ast.Expr T_javafe.ast.VarInit))
(assert (= T_javafe.ast.Expr (asChild T_javafe.ast.Expr T_javafe.ast.VarInit)))
(assert (subtypes T_java.lang.Long T_java.lang.Number))
(assert (= T_java.lang.Long (asChild T_java.lang.Long T_java.lang.Number)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_java.lang.Long) (= ?t T_java.lang.Long)) :pattern ((subtypes ?t T_java.lang.Long)) )))
(assert (subtypes T_java.lang.Long T_java.lang.Comparable))
(assert (subtypes T_javafe.ast.ExprObjectDesignator T_javafe.ast.ObjectDesignator))
(assert (= T_javafe.ast.ExprObjectDesignator (asChild T_javafe.ast.ExprObjectDesignator T_javafe.ast.ObjectDesignator)))
(assert (subtypes T_javafe.ast.ClassDecl T_javafe.ast.TypeDecl))
(assert (= T_javafe.ast.ClassDecl (asChild T_javafe.ast.ClassDecl T_javafe.ast.TypeDecl)))
(assert (subtypes T_javafe.ast.LexicalPragma T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.LexicalPragma (asChild T_javafe.ast.LexicalPragma T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.OnDemandImportDecl T_javafe.ast.ImportDecl))
(assert (= T_javafe.ast.OnDemandImportDecl (asChild T_javafe.ast.OnDemandImportDecl T_javafe.ast.ImportDecl)))
(assert (subtypes T_java.lang.Comparable T_java.lang.Object))
(assert (subtypes T_javafe.ast.ReturnStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.ReturnStmt (asChild T_javafe.ast.ReturnStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.AmbiguousMethodInvocation T_javafe.ast.Expr))
(assert (= T_javafe.ast.AmbiguousMethodInvocation (asChild T_javafe.ast.AmbiguousMethodInvocation T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.SkipStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.SkipStmt (asChild T_javafe.ast.SkipStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.BreakStmt T_javafe.ast.BranchStmt))
(assert (= T_javafe.ast.BreakStmt (asChild T_javafe.ast.BreakStmt T_javafe.ast.BranchStmt)))
(assert (subtypes T_javafe.tc.Env T_java.lang.Object))
(assert (= T_javafe.tc.Env (asChild T_javafe.tc.Env T_java.lang.Object)))
(assert (subtypes T_javafe.ast.Modifiers T_java.lang.Object))
(assert (= T_javafe.ast.Modifiers (asChild T_javafe.ast.Modifiers T_java.lang.Object)))
(assert (subtypes T_javafe.util.Location T_java.lang.Object))
(assert (= T_javafe.util.Location (asChild T_javafe.util.Location T_java.lang.Object)))
(assert (subtypes T_javafe.tc.TypeSig T_javafe.ast.Type))
(assert (= T_javafe.tc.TypeSig (asChild T_javafe.tc.TypeSig T_javafe.ast.Type)))
(assert (subtypes T_javafe.ast.ConstructorInvocation T_javafe.ast.Stmt))
(assert (= T_javafe.ast.ConstructorInvocation (asChild T_javafe.ast.ConstructorInvocation T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.Stmt T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.Stmt (asChild T_javafe.ast.Stmt T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.CastExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.CastExpr (asChild T_javafe.ast.CastExpr T_javafe.ast.Expr)))
(assert (subtypes T_java.lang.Double T_java.lang.Number))
(assert (= T_java.lang.Double (asChild T_java.lang.Double T_java.lang.Number)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_java.lang.Double) (= ?t T_java.lang.Double)) :pattern ((subtypes ?t T_java.lang.Double)) )))
(assert (subtypes T_java.lang.Double T_java.lang.Comparable))
(assert (subtypes T_javafe.ast.BinaryExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.BinaryExpr (asChild T_javafe.ast.BinaryExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.IfStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.IfStmt (asChild T_javafe.ast.IfStmt T_javafe.ast.Stmt)))
(assert (subtypes T_java.util.Map T_java.lang.Object))
(assert (subtypes T_java.util.Map T_java.util.EscjavaKeyValue))
(assert (subtypes T_java.lang.Float T_java.lang.Number))
(assert (= T_java.lang.Float (asChild T_java.lang.Float T_java.lang.Number)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_java.lang.Float) (= ?t T_java.lang.Float)) :pattern ((subtypes ?t T_java.lang.Float)) )))
(assert (subtypes T_java.lang.Float T_java.lang.Comparable))
(assert (subtypes T_javafe.ast.ASTDecoration T_java.lang.Object))
(assert (= T_javafe.ast.ASTDecoration (asChild T_javafe.ast.ASTDecoration T_java.lang.Object)))
(assert (subtypes T_javafe.ast.ArrayType T_javafe.ast.Type))
(assert (= T_javafe.ast.ArrayType (asChild T_javafe.ast.ArrayType T_javafe.ast.Type)))
(assert (subtypes T_javafe.ast.GenericVarDecl T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.GenericVarDecl (asChild T_javafe.ast.GenericVarDecl T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.AmbiguousVariableAccess T_javafe.ast.Expr))
(assert (= T_javafe.ast.AmbiguousVariableAccess (asChild T_javafe.ast.AmbiguousVariableAccess T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.ContinueStmt T_javafe.ast.BranchStmt))
(assert (= T_javafe.ast.ContinueStmt (asChild T_javafe.ast.ContinueStmt T_javafe.ast.BranchStmt)))
(assert (subtypes T_javafe.ast.TypeModifierPragmaVec T_java.lang.Object))
(assert (= T_javafe.ast.TypeModifierPragmaVec (asChild T_javafe.ast.TypeModifierPragmaVec T_java.lang.Object)))
(assert (subtypes T_javafe.parser.TagConstants T_javafe.ast.TagConstants))
(assert (= T_javafe.parser.TagConstants (asChild T_javafe.parser.TagConstants T_javafe.ast.TagConstants)))
(assert (subtypes T_javafe.ast.TagConstants T_javafe.ast.OperatorTags))
(assert (= T_javafe.ast.TagConstants (asChild T_javafe.ast.TagConstants T_javafe.ast.OperatorTags)))
(assert (subtypes T_javafe.ast.TypeDeclElem T_java.lang.Object))
(assert (subtypes T_javafe.ast.SuperObjectDesignator T_javafe.ast.ObjectDesignator))
(assert (= T_javafe.ast.SuperObjectDesignator (asChild T_javafe.ast.SuperObjectDesignator T_javafe.ast.ObjectDesignator)))
(assert (subtypes T_java.util.EscjavaKeyValue T_java.lang.Object))
(assert (subtypes T_java.io.Serializable T_java.lang.Object))
(assert (subtypes T_javafe.ast.ASTNode T_java.lang.Object))
(assert (= T_javafe.ast.ASTNode (asChild T_javafe.ast.ASTNode T_java.lang.Object)))
(assert (subtypes T_javafe.ast.ASTNode T_java.lang.Cloneable))
(assert (subtypes T_javafe.ast.ArrayRefExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.ArrayRefExpr (asChild T_javafe.ast.ArrayRefExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.StmtPragma T_javafe.ast.Stmt))
(assert (= T_javafe.ast.StmtPragma (asChild T_javafe.ast.StmtPragma T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.PrimitiveType T_javafe.ast.Type))
(assert (= T_javafe.ast.PrimitiveType (asChild T_javafe.ast.PrimitiveType T_javafe.ast.Type)))
(assert (subtypes T_java.lang.String T_java.lang.Object))
(assert (= T_java.lang.String (asChild T_java.lang.String T_java.lang.Object)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_java.lang.String) (= ?t T_java.lang.String)) :pattern ((subtypes ?t T_java.lang.String)) )))
(assert (subtypes T_java.lang.String T_java.io.Serializable))
(assert (subtypes T_java.lang.String T_java.lang.Comparable))
(assert (subtypes T_javafe.ast.ArrayInit T_javafe.ast.VarInit))
(assert (= T_javafe.ast.ArrayInit (asChild T_javafe.ast.ArrayInit T_javafe.ast.VarInit)))
(assert (subtypes T_javafe.ast.OperatorTags T_java.lang.Object))
(assert (= T_javafe.ast.OperatorTags (asChild T_javafe.ast.OperatorTags T_java.lang.Object)))
(assert (subtypes T_javafe.ast.OperatorTags T_javafe.ast.GeneratedTags))
(assert (subtypes T_javafe.ast.ConstructorDecl T_javafe.ast.RoutineDecl))
(assert (= T_javafe.ast.ConstructorDecl (asChild T_javafe.ast.ConstructorDecl T_javafe.ast.RoutineDecl)))
(assert (subtypes T_javafe.ast.InstanceOfExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.InstanceOfExpr (asChild T_javafe.ast.InstanceOfExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.util.StackVector T_java.lang.Object))
(assert (= T_javafe.util.StackVector (asChild T_javafe.util.StackVector T_java.lang.Object)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_javafe.util.StackVector) (= ?t T_javafe.util.StackVector)) :pattern ((subtypes ?t T_javafe.util.StackVector)) )))
(assert (subtypes T_javafe.ast.RoutineDecl T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.RoutineDecl (asChild T_javafe.ast.RoutineDecl T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.RoutineDecl T_javafe.ast.TypeDeclElem))
(assert (subtypes T_javafe.ast.TryCatchStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.TryCatchStmt (asChild T_javafe.ast.TryCatchStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.SynchronizeStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.SynchronizeStmt (asChild T_javafe.ast.SynchronizeStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.TypeModifierPragma T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.TypeModifierPragma (asChild T_javafe.ast.TypeModifierPragma T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.parser.ParseExpr T_javafe.parser.ParseType))
(assert (= T_javafe.parser.ParseExpr (asChild T_javafe.parser.ParseExpr T_javafe.parser.ParseType)))
(assert (subtypes T_javafe.ast.LiteralExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.LiteralExpr (asChild T_javafe.ast.LiteralExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.CatchClause T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.CatchClause (asChild T_javafe.ast.CatchClause T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.FieldDecl T_javafe.ast.GenericVarDecl))
(assert (= T_javafe.ast.FieldDecl (asChild T_javafe.ast.FieldDecl T_javafe.ast.GenericVarDecl)))
(assert (subtypes T_javafe.ast.FieldDecl T_javafe.ast.TypeDeclElem))
(assert (subtypes T_javafe.parser.Lex T_javafe.parser.Token))
(assert (= T_javafe.parser.Lex (asChild T_javafe.parser.Lex T_javafe.parser.Token)))
(assert (subtypes T_javafe.ast.EvalStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.EvalStmt (asChild T_javafe.ast.EvalStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.ForStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.ForStmt (asChild T_javafe.ast.ForStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.tc.TagConstants T_javafe.parser.TagConstants))
(assert (= T_javafe.tc.TagConstants (asChild T_javafe.tc.TagConstants T_javafe.parser.TagConstants)))
(assert (subtypes T_javafe.ast.ClassLiteral T_javafe.ast.Expr))
(assert (= T_javafe.ast.ClassLiteral (asChild T_javafe.ast.ClassLiteral T_javafe.ast.Expr)))
(assert (subtypes T_java.lang.Number T_java.lang.Object))
(assert (= T_java.lang.Number (asChild T_java.lang.Number T_java.lang.Object)))
(assert (subtypes T_java.lang.Number T_java.io.Serializable))
(assert (subtypes T_java.util.Hashtable T_java.util.Dictionary))
(assert (= T_java.util.Hashtable (asChild T_java.util.Hashtable T_java.util.Dictionary)))
(assert (subtypes T_java.util.Hashtable T_java.util.Map))
(assert (subtypes T_java.util.Hashtable T_java.lang.Cloneable))
(assert (subtypes T_java.util.Hashtable T_java.io.Serializable))
(assert (subtypes T_javafe.ast.TryFinallyStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.TryFinallyStmt (asChild T_javafe.ast.TryFinallyStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.ThisExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.ThisExpr (asChild T_javafe.ast.ThisExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.SingleTypeImportDecl T_javafe.ast.ImportDecl))
(assert (= T_javafe.ast.SingleTypeImportDecl (asChild T_javafe.ast.SingleTypeImportDecl T_javafe.ast.ImportDecl)))
(assert (subtypes T_javafe.ast.VarInit T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.VarInit (asChild T_javafe.ast.VarInit T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.LabelStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.LabelStmt (asChild T_javafe.ast.LabelStmt T_javafe.ast.Stmt)))
(assert (subtypes T_java.util.Dictionary T_java.lang.Object))
(assert (= T_java.util.Dictionary (asChild T_java.util.Dictionary T_java.lang.Object)))
(assert (subtypes T_java.util.Dictionary T_java.util.EscjavaKeyValue))
(assert (subtypes T_javafe.ast.DoStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.DoStmt (asChild T_javafe.ast.DoStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.Identifier T_java.lang.Object))
(assert (= T_javafe.ast.Identifier (asChild T_javafe.ast.Identifier T_java.lang.Object)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_javafe.ast.Identifier) (= ?t T_javafe.ast.Identifier)) :pattern ((subtypes ?t T_javafe.ast.Identifier)) )))
(assert (subtypes T_javafe.ast.SwitchStmt T_javafe.ast.GenericBlockStmt))
(assert (= T_javafe.ast.SwitchStmt (asChild T_javafe.ast.SwitchStmt T_javafe.ast.GenericBlockStmt)))
(assert (subtypes T_javafe.ast.ModifierPragma T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.ModifierPragma (asChild T_javafe.ast.ModifierPragma T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.FieldAccess T_javafe.ast.Expr))
(assert (= T_javafe.ast.FieldAccess (asChild T_javafe.ast.FieldAccess T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.CatchClauseVec T_java.lang.Object))
(assert (= T_javafe.ast.CatchClauseVec (asChild T_javafe.ast.CatchClauseVec T_java.lang.Object)))
(assert (subtypes T_javafe.ast.ObjectDesignator T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.ObjectDesignator (asChild T_javafe.ast.ObjectDesignator T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.SwitchLabel T_javafe.ast.Stmt))
(assert (= T_javafe.ast.SwitchLabel (asChild T_javafe.ast.SwitchLabel T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.ast.BranchStmt T_javafe.ast.Stmt))
(assert (= T_javafe.ast.BranchStmt (asChild T_javafe.ast.BranchStmt T_javafe.ast.Stmt)))
(assert (subtypes T_javafe.parser.ParseStmt T_javafe.parser.ParseExpr))
(assert (= T_javafe.parser.ParseStmt (asChild T_javafe.parser.ParseStmt T_javafe.parser.ParseExpr)))
(assert (subtypes T_javafe.ast.CondExpr T_javafe.ast.Expr))
(assert (= T_javafe.ast.CondExpr (asChild T_javafe.ast.CondExpr T_javafe.ast.Expr)))
(assert (subtypes T_javafe.ast.TypeDecl T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.TypeDecl (asChild T_javafe.ast.TypeDecl T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.TypeDecl T_javafe.ast.TypeDeclElem))
(assert (subtypes T_java.lang.Cloneable T_java.lang.Object))
(assert (subtypes T_javafe.parser.ParseType T_javafe.parser.ParseUtil))
(assert (= T_javafe.parser.ParseType (asChild T_javafe.parser.ParseType T_javafe.parser.ParseUtil)))
(assert (subtypes T_javafe.ast.Name T_javafe.ast.ASTNode))
(assert (= T_javafe.ast.Name (asChild T_javafe.ast.Name T_javafe.ast.ASTNode)))
(assert (subtypes T_javafe.ast.TypeObjectDesignator T_javafe.ast.ObjectDesignator))
(assert (= T_javafe.ast.TypeObjectDesignator (asChild T_javafe.ast.TypeObjectDesignator T_javafe.ast.ObjectDesignator)))
(assert (subtypes T_javafe.tc.FieldDeclVec T_java.lang.Object))
(assert (= T_javafe.tc.FieldDeclVec (asChild T_javafe.tc.FieldDeclVec T_java.lang.Object)))
(assert (subtypes T_java.lang.Boolean T_java.lang.Object))
(assert (= T_java.lang.Boolean (asChild T_java.lang.Boolean T_java.lang.Object)))
(assert (forall ((?t Int)) (! (= (subtypes ?t T_java.lang.Boolean) (= ?t T_java.lang.Boolean)) :pattern ((subtypes ?t T_java.lang.Boolean)) )))
(assert (subtypes T_java.lang.Boolean T_java.io.Serializable))
(assert (subtypes T_javafe.ast.GeneratedTags T_java.lang.Object))
(assert (subtypes T_javafe.ast.MethodInvocation T_javafe.ast.Expr))
(assert (= T_javafe.ast.MethodInvocation (asChild T_javafe.ast.MethodInvocation T_javafe.ast.Expr)))
(assert (subtypes T_javafe.parser.PragmaParser T_java.lang.Object))
(assert (subtypes T_javafe.tc.MethodDeclVec T_java.lang.Object))
(assert (= T_javafe.tc.MethodDeclVec (asChild T_javafe.tc.MethodDeclVec T_java.lang.Object)))
(assert (distinct arrayType T_boolean T_char T_byte T_short T_int T_long T_float T_double T_.TYPE T_javafe.ast.CompoundName T_javafe.parser.PunctuationPrefixTree T_javafe.ast.VariableAccess T_javafe.ast.InitBlock T_javafe.ast.VarDeclStmt T_javafe.ast.ExprVec T_javafe.parser.Token T_javafe.ast.Type T_javafe.ast.ClassDeclStmt T_javafe.ast.NewArrayExpr T_javafe.ast.WhileStmt T_javafe.ast.ModifierPragmaVec T_javafe.ast.ThrowStmt T_javafe.ast.TypeDeclElemPragma T_javafe.ast.StmtVec T_javafe.ast.UnaryExpr T_javafe.parser.ParseUtil T_javafe.ast.LocalVarDecl T_javafe.ast.CompilationUnit T_javafe.ast.ParenExpr T_javafe.ast.IdentifierVec T_javafe.ast.GenericBlockStmt T_javafe.util.CorrelatedReader T_javafe.ast.MethodDecl T_javafe.ast.SimpleName T_javafe.ast.FormalParaDecl T_javafe.ast.BlockStmt T_java.lang.Integer T_javafe.ast.InterfaceDecl T_javafe.ast.ImportDecl T_javafe.ast.NewInstanceExpr T_javafe.ast.TypeName T_javafe.ast.Expr T_java.lang.Long T_javafe.ast.ExprObjectDesignator T_javafe.ast.ClassDecl T_javafe.ast.LexicalPragma T_javafe.ast.OnDemandImportDecl T_java.lang.Comparable T_javafe.ast.ReturnStmt T_javafe.ast.AmbiguousMethodInvocation T_java.lang.Object T_javafe.ast.SkipStmt T_javafe.ast.BreakStmt T_javafe.tc.Env T_javafe.ast.Modifiers T_javafe.util.Location T_javafe.tc.TypeSig T_javafe.ast.ConstructorInvocation T_javafe.ast.Stmt T_javafe.ast.CastExpr T_java.lang.Double T_javafe.ast.BinaryExpr T_javafe.ast.IfStmt T_java.util.Map T_java.lang.Float T_javafe.ast.ASTDecoration T_javafe.ast.ArrayType T_javafe.ast.GenericVarDecl T_javafe.ast.AmbiguousVariableAccess T_javafe.ast.ContinueStmt T_javafe.ast.TypeModifierPragmaVec T_javafe.parser.TagConstants T_javafe.ast.TagConstants T_javafe.ast.TypeDeclElem T_javafe.ast.SuperObjectDesignator T_java.util.EscjavaKeyValue T_java.io.Serializable T_javafe.ast.ASTNode T_javafe.ast.ArrayRefExpr T_javafe.ast.StmtPragma T_javafe.ast.PrimitiveType T_java.lang.String T_javafe.ast.ArrayInit T_javafe.ast.OperatorTags T_javafe.ast.ConstructorDecl T_javafe.ast.InstanceOfExpr T_javafe.util.StackVector T_javafe.ast.RoutineDecl T_javafe.ast.TryCatchStmt T_javafe.ast.SynchronizeStmt T_javafe.ast.TypeModifierPragma T_javafe.parser.ParseExpr T_javafe.ast.LiteralExpr T_javafe.ast.CatchClause T_javafe.ast.FieldDecl T_javafe.parser.Lex T_javafe.ast.EvalStmt T_javafe.ast.ForStmt T_javafe.tc.TagConstants T_javafe.ast.ClassLiteral T_java.lang.Number T_java.util.Hashtable T_javafe.ast.TryFinallyStmt T_javafe.ast.ThisExpr T_javafe.ast.SingleTypeImportDecl T_javafe.ast.VarInit T_javafe.ast.LabelStmt T_java.util.Dictionary T_javafe.ast.DoStmt T_javafe.ast.Identifier T_javafe.ast.SwitchStmt T_javafe.ast.ModifierPragma T_javafe.ast.FieldAccess T_javafe.ast.CatchClauseVec T_javafe.ast.ObjectDesignator T_javafe.ast.SwitchLabel T_javafe.ast.BranchStmt T_javafe.parser.ParseStmt T_javafe.ast.CondExpr T_javafe.ast.TypeDecl T_java.lang.Cloneable T_javafe.parser.ParseType T_javafe.ast.Name T_javafe.ast.TypeObjectDesignator T_javafe.tc.FieldDeclVec T_java.lang.Boolean T_javafe.ast.GeneratedTags T_javafe.ast.MethodInvocation T_javafe.parser.PragmaParser T_javafe.tc.MethodDeclVec))
(assert (= Smt.true (is noTokens_14.212.27 T_int)))
(assert (= Smt.true (is BOOLEANTYPE_15.27.26 T_int)))
(assert (= BOOLEANTYPE_15.27.26 94))
(assert (= Smt.true (is IF_14.73.26 T_int)))
(assert (= IF_14.73.26 154))
(assert (= Smt.true (is CHARLIT_15.41.26 T_int)))
(assert (= CHARLIT_15.41.26 107))
(assert (= Smt.true (is ASGREM_16.43.26 T_int)))
(assert (= ASGREM_16.43.26 76))
(assert (= Smt.true (is TYPEDECLELEMPRAGMA_14.27.26 T_int)))
(assert (= TYPEDECLELEMPRAGMA_14.27.26 117))
(assert (= Smt.true (is CLASSLITERAL_17.60.7 T_int)))
(assert (= CLASSLITERAL_17.60.7 46))
(assert (= Smt.true (is CONSTRUCTORDECL_17.19.7 T_int)))
(assert (= CONSTRUCTORDECL_17.19.7 5))
(assert (= Smt.true (is GT_16.27.26 T_int)))
(assert (= GT_16.27.26 62))
(assert (= Smt.true (is INC_16.58.26 T_int)))
(assert (= INC_16.58.26 89))
(assert (= Smt.true (is punctuationCodes_14.164.19 (array T_int))))
(assert (not (= punctuationCodes_14.164.19 null)))
(assert (= (typeof punctuationCodes_14.164.19) (array T_int)))
(assert (= (arrayLength punctuationCodes_14.164.19) 48))
(assert (= Smt.true (is FORSTMT_17.39.7 T_int)))
(assert (= FORSTMT_17.39.7 25))
(assert (= Smt.true (is WHILESTMT_17.29.7 T_int)))
(assert (= WHILESTMT_17.29.7 15))
(assert (= Smt.true (is IDENT_15.25.26 T_int)))
(assert (= IDENT_15.25.26 93))
(assert (= Smt.true (is LONGLIT_15.40.26 T_int)))
(assert (= LONGLIT_15.40.26 106))
(assert (= Smt.true (is ASGDIV_16.42.26 T_int)))
(assert (= ASGDIV_16.42.26 75))
(assert (= Smt.true (is STMTPRAGMA_14.26.26 T_int)))
(assert (= STMTPRAGMA_14.26.26 116))
(assert (= Smt.true (is NEWINSTANCEEXPR_17.49.7 T_int)))
(assert (= NEWINSTANCEEXPR_17.49.7 35))
(assert (= Smt.true (is CLASS_14.59.26 T_int)))
(assert (= CLASS_14.59.26 140))
(assert (= Smt.true (is GE_16.26.26 T_int)))
(assert (= GE_16.26.26 61))
(assert (= Smt.true (is METHODINVOCATION_17.59.7 T_int)))
(assert (= METHODINVOCATION_17.59.7 45))
(assert (forall ((?s Int)) (=> (not (= ?s null)) (= Smt.true (is (select1 seqVarInit_4.1153.46 ?s) T_javafe.util.StackVector)))))
(assert (forall ((?s Int)) (=> (not (= ?s null)) (not (= (select1 seqVarInit_4.1153.46 ?s) null)))))
(assert (forall ((?s Int)) (=> (not (= ?s null)) (= (typeof (select1 seqVarInit_4.1153.46 ?s)) T_javafe.util.StackVector))))
(assert (= Smt.true (is INTERFACEDECL_17.18.7 T_int)))
(assert (= INTERFACEDECL_17.18.7 4))
(assert (= Smt.true (is BITNOT_16.57.26 T_int)))
(assert (= BITNOT_16.57.26 88))
(assert (= Smt.true (is INTLIT_15.39.26 T_int)))
(assert (= INTLIT_15.39.26 105))
(assert (forall ((?s_1_ Int)) (=> (not (= ?s_1_ null)) (= Smt.true (is (select1 seqIdentifier_5.33.46 ?s_1_) T_javafe.util.StackVector)))))
(assert (forall ((?s_1_ Int)) (=> (not (= ?s_1_ null)) (not (= (select1 seqIdentifier_5.33.46 ?s_1_) null)))))
(assert (forall ((?s_1_ Int)) (=> (not (= ?s_1_ null)) (= (typeof (select1 seqIdentifier_5.33.46 ?s_1_)) T_javafe.util.StackVector))))
(assert (= Smt.true (is ASGMUL_16.41.26 T_int)))
(assert (= ASGMUL_16.41.26 74))
(assert (= Smt.true (is IFSTMT_17.38.7 T_int)))
(assert (= IFSTMT_17.38.7 24))
(assert (= Smt.true (is CLASSDECLSTMT_17.28.7 T_int)))
(assert (= CLASSDECLSTMT_17.28.7 14))
(assert (= Smt.true (is MODIFIERPRAGMA_14.25.26 T_int)))
(assert (= MODIFIERPRAGMA_14.25.26 115))
(assert (forall ((?s_2_ Int)) (=> (not (= ?s_2_ null)) (= Smt.true (is (select1 seqCatchClause_76.46 ?s_2_) T_javafe.util.StackVector)))))
(assert (forall ((?s_2_ Int)) (=> (not (= ?s_2_ null)) (not (= (select1 seqCatchClause_76.46 ?s_2_) null)))))
(assert (forall ((?s_2_ Int)) (=> (not (= ?s_2_ null)) (= (typeof (select1 seqCatchClause_76.46 ?s_2_)) T_javafe.util.StackVector))))
(assert (= Smt.true (is FOR_14.71.26 T_int)))
(assert (= FOR_14.71.26 152))
(assert (= Smt.true (is ARRAYREFEXPR_17.48.7 T_int)))
(assert (= ARRAYREFEXPR_17.48.7 34))
(assert (= Smt.true (is EQ_16.25.26 T_int)))
(assert (= EQ_16.25.26 60))
(assert (= Smt.true (is AMBIGUOUSMETHODINVOCATION_17.58.7 T_int)))
(assert (= AMBIGUOUSMETHODINVOCATION_17.58.7 44))
(assert (= Smt.true (is keywordStrings_14.181.30 (array T_java.lang.String))))
(assert (not (= keywordStrings_14.181.30 null)))
(assert (= (typeof keywordStrings_14.181.30) (array T_java.lang.String)))
(assert (= (arrayLength keywordStrings_14.181.30) 51))
(assert (= Smt.true (is THROW_14.95.26 T_int)))
(assert (= THROW_14.95.26 176))
(assert (= Smt.true (is NOT_16.56.26 T_int)))
(assert (= NOT_16.56.26 87))
(assert (= Smt.true (is CLASSDECL_17.17.7 T_int)))
(assert (= CLASSDECL_17.17.7 3))
(assert (= Smt.true (is BOOLEANLIT_15.38.26 T_int)))
(assert (= BOOLEANLIT_15.38.26 104))
(assert (= Smt.true (is ASSIGN_16.40.26 T_int)))
(assert (= ASSIGN_16.40.26 73))
(assert (= Smt.true (is LEXICALPRAGMA_14.24.26 T_int)))
(assert (= LEXICALPRAGMA_14.24.26 114))
(assert (= Smt.true (is CATCH_14.57.26 T_int)))
(assert (= CATCH_14.57.26 138))
(assert (= Smt.true (is NE_16.24.26 T_int)))
(assert (= NE_16.24.26 59))
(assert (= Smt.true (is THISEXPR_17.47.7 T_int)))
(assert (= THISEXPR_17.47.7 33))
(assert (= Smt.true (is THIS_14.94.26 T_int)))
(assert (= THIS_14.94.26 175))
(assert (= Smt.true (is NULL_14.82.26 T_int)))
(assert (= NULL_14.82.26 163))
(assert (= Smt.true (is LABELSTMT_17.37.7 T_int)))
(assert (= LABELSTMT_17.37.7 23))
(assert (= Smt.true (is VARDECLSTMT_17.27.7 T_int)))
(assert (= VARDECLSTMT_17.27.7 13))
(assert (= Smt.true (is UNARYSUB_16.55.26 T_int)))
(assert (= UNARYSUB_16.55.26 86))
(assert (= Smt.true (is COMPOUNDNAME_17.67.7 T_int)))
(assert (= COMPOUNDNAME_17.67.7 53))
(assert (= Smt.true (is SHORTTYPE_15.36.26 T_int)))
(assert (= SHORTTYPE_15.36.26 103))
(assert (= Smt.true (is STAR_16.37.26 T_int)))
(assert (= STAR_16.37.26 72))
(assert (= Smt.true (is FINALLY_14.69.26 T_int)))
(assert (= FINALLY_14.69.26 150))
(assert (= Smt.true (is FIELDACCESS_17.57.7 T_int)))
(assert (= FIELDACCESS_17.57.7 43))
(assert (= Smt.true (is ONDEMANDIMPORTDECL_17.16.7 T_int)))
(assert (= ONDEMANDIMPORTDECL_17.16.7 2))
(assert (= Smt.true (is CASE_14.56.26 T_int)))
(assert (= CASE_14.56.26 137))
(assert (= Smt.true (is BITAND_16.23.26 T_int)))
(assert (= BITAND_16.23.26 58))
(assert (= Smt.true (is TYPESIG_76.6.28 T_int)))
(assert (= TYPESIG_76.6.28 184))
(assert (= Smt.true (is SYNCHRONIZED_14.93.26 T_int)))
(assert (= SYNCHRONIZED_14.93.26 174))
(assert (= Smt.true (is RPAREN_14.38.26 T_int)))
(assert (= RPAREN_14.38.26 125))
(assert (= Smt.true (is UNARYADD_16.54.26 T_int)))
(assert (= UNARYADD_16.54.26 85))
(assert (= Smt.true (is CONTINUESTMT_17.36.7 T_int)))
(assert (= CONTINUESTMT_17.36.7 22))
(assert (= Smt.true (is SWITCHSTMT_17.26.7 T_int)))
(assert (= SWITCHSTMT_17.26.7 12))
(assert (= Smt.true (is BYTETYPE_15.35.26 T_int)))
(assert (= BYTETYPE_15.35.26 102))
(assert (= Smt.true (is MOD_16.36.26 T_int)))
(assert (= MOD_16.36.26 71))
(assert (= Smt.true (is ARRAYINIT_17.46.7 T_int)))
(assert (= ARRAYINIT_17.46.7 32))
(assert (= Smt.true (is SIMPLENAME_17.66.7 T_int)))
(assert (= SIMPLENAME_17.66.7 52))
(assert (= Smt.true (is punctuationStrings_14.134.22 (array T_java.lang.String))))
(assert (not (= punctuationStrings_14.134.22 null)))
(assert (= (typeof punctuationStrings_14.134.22) (array T_java.lang.String)))
(assert (= (arrayLength punctuationStrings_14.134.22) 48))
(assert (= Smt.true (is BITXOR_16.22.26 T_int)))
(assert (= BITXOR_16.22.26 57))
(assert (= Smt.true (is VARIABLEACCESS_17.56.7 T_int)))
(assert (= VARIABLEACCESS_17.56.7 42))
(assert (= Smt.true (is SINGLETYPEIMPORTDECL_17.15.7 T_int)))
(assert (= SINGLETYPEIMPORTDECL_17.15.7 1))
(assert (= Smt.true (is SWITCH_14.92.26 T_int)))
(assert (= SWITCH_14.92.26 173))
(assert (= Smt.true (is LPAREN_14.37.26 T_int)))
(assert (= LPAREN_14.37.26 124))
(assert (= Smt.true (is ASGBITXOR_16.51.26 T_int)))
(assert (= ASGBITXOR_16.51.26 84))
(assert (forall ((?s_3_ Int)) (=> (not (= ?s_3_ null)) (= Smt.true (is (select1 seqModifierPragma_6.74.32 ?s_3_) T_javafe.util.StackVector)))))
(assert (forall ((?s_3_ Int)) (=> (not (= ?s_3_ null)) (not (= (select1 seqModifierPragma_6.74.32 ?s_3_) null)))))
(assert (forall ((?s_3_ Int)) (=> (not (= ?s_3_ null)) (= (typeof (select1 seqModifierPragma_6.74.32 ?s_3_)) T_javafe.util.StackVector))))
(assert (= Smt.true (is NULLTYPE_15.34.26 T_int)))
(assert (= NULLTYPE_15.34.26 101))
(assert (= Smt.true (is DIV_16.35.26 T_int)))
(assert (= DIV_16.35.26 70))
(assert (= Smt.true (is EOF_14.17.26 T_int)))
(assert (= EOF_14.17.26 111))
(assert (= Smt.true (is BLOCKSTMT_17.25.7 T_int)))
(assert (= BLOCKSTMT_17.25.7 11))
(assert (= Smt.true (is BREAK_14.54.26 T_int)))
(assert (= BREAK_14.54.26 135))
(assert (= Smt.true (is CATCHCLAUSE_17.45.7 T_int)))
(assert (= CATCHCLAUSE_17.45.7 31))
(assert (= Smt.true (is otherCodes_14.202.27 (array T_int))))
(assert (not (= otherCodes_14.202.27 null)))
(assert (= (typeof otherCodes_14.202.27) (array T_int)))
(assert (= (arrayLength otherCodes_14.202.27) 15))
(assert (= Smt.true (is BITOR_16.21.26 T_int)))
(assert (= BITOR_16.21.26 56))
(assert (= Smt.true (is ARRAYTYPE_17.65.7 T_int)))
(assert (= ARRAYTYPE_17.65.7 51))
(assert (= Smt.true (is BREAKSTMT_17.35.7 T_int)))
(assert (= BREAKSTMT_17.35.7 21))
(assert (= Smt.true (is RBRACE_14.36.26 T_int)))
(assert (= RBRACE_14.36.26 123))
(assert (= Smt.true (is SUPER_14.91.26 T_int)))
(assert (= SUPER_14.91.26 172))
(assert (= Smt.true (is ASGBITOR_16.50.26 T_int)))
(assert (= ASGBITOR_16.50.26 83))
(assert (= Smt.true (is AMBIGUOUSVARIABLEACCESS_17.55.7 T_int)))
(assert (= AMBIGUOUSVARIABLEACCESS_17.55.7 41))
(assert (forall ((?s_4_ Int)) (=> (not (= ?s_4_ null)) (= Smt.true (is (select1 seqTypeDeclElem_4.1161.46 ?s_4_) T_javafe.util.StackVector)))))
(assert (forall ((?s_4_ Int)) (=> (not (= ?s_4_ null)) (not (= (select1 seqTypeDeclElem_4.1161.46 ?s_4_) null)))))
(assert (forall ((?s_4_ Int)) (=> (not (= ?s_4_ null)) (= (typeof (select1 seqTypeDeclElem_4.1161.46 ?s_4_)) T_javafe.util.StackVector))))
(assert (= Smt.true (is SUB_16.34.26 T_int)))
(assert (= SUB_16.34.26 69))
(assert (= Smt.true (is COMPILATIONUNIT_17.14.7 T_int)))
(assert (= COMPILATIONUNIT_17.14.7 0))
(assert (= Smt.true (is NONE_40.18.26 T_int)))
(assert (= NONE_40.18.26 0))
(assert (= Smt.true (is FORMALPARADECL_17.24.7 T_int)))
(assert (= FORMALPARADECL_17.24.7 10))
(assert (= Smt.true (is LBRACE_14.35.26 T_int)))
(assert (= LBRACE_14.35.26 122))
(assert (= Smt.true (is CONSTRUCTORINVOCATION_17.44.7 T_int)))
(assert (= CONSTRUCTORINVOCATION_17.44.7 30))
(assert (= Smt.true (is VOIDTYPE_15.33.26 T_int)))
(assert (= VOIDTYPE_15.33.26 100))
(assert (= Smt.true (is ASGBITAND_16.49.26 T_int)))
(assert (= ASGBITAND_16.49.26 82))
(assert (= Smt.true (is TYPENAME_17.64.7 T_int)))
(assert (= TYPENAME_17.64.7 50))
(assert (= Smt.true (is PARENEXPR_17.54.7 T_int)))
(assert (= PARENEXPR_17.54.7 40))
(assert (= Smt.true (is THROWSTMT_17.34.7 T_int)))
(assert (= THROWSTMT_17.34.7 20))
(assert (= Smt.true (is LAST_KEYWORD_14.103.26 T_int)))
(assert (= LAST_KEYWORD_14.103.26 183))
(assert (= Smt.true (is ADD_16.33.26 T_int)))
(assert (= ADD_16.33.26 68))
(assert (= Smt.true (is SEMICOLON_14.34.26 T_int)))
(assert (= SEMICOLON_14.34.26 121))
(assert (= Smt.true (is DOUBLETYPE_15.32.26 T_int)))
(assert (= DOUBLETYPE_15.32.26 99))
(assert (= Smt.true (is AND_16.20.26 T_int)))
(assert (= AND_16.20.26 55))
(assert (= Smt.true (is WHILE_14.102.26 T_int)))
(assert (= WHILE_14.102.26 183))
(assert (= Smt.true (is ASGURSHIFT_16.48.26 T_int)))
(assert (= ASGURSHIFT_16.48.26 81))
(assert (= Smt.true (is ELSE_14.65.26 T_int)))
(assert (= ELSE_14.65.26 146))
(assert (= Smt.true (is FIELDDECL_17.23.7 T_int)))
(assert (= FIELDDECL_17.23.7 9))
(assert (= Smt.true (is TRYCATCHSTMT_17.43.7 T_int)))
(assert (= TRYCATCHSTMT_17.43.7 29))
(assert (= Smt.true (is FIRST_KEYWORD_14.51.26 T_int)))
(assert (= FIRST_KEYWORD_14.51.26 133))
(assert (= Smt.true (is URSHIFT_16.32.26 T_int)))
(assert (= URSHIFT_16.32.26 67))
(assert (= Smt.true (is SUPEROBJECTDESIGNATOR_17.63.7 T_int)))
(assert (= SUPEROBJECTDESIGNATOR_17.63.7 49))
(assert (= Smt.true (is NULL_12.60.26 T_int)))
(assert (= NULL_12.60.26 0))
(assert (= Smt.true (is CASTEXPR_17.53.7 T_int)))
(assert (= CASTEXPR_17.53.7 39))
(assert (= Smt.true (is RETURNSTMT_17.33.7 T_int)))
(assert (= RETURNSTMT_17.33.7 19))
(assert (= Smt.true (is FLOATTYPE_15.31.26 T_int)))
(assert (= FLOATTYPE_15.31.26 98))
(assert (= Smt.true (is OR_16.19.26 T_int)))
(assert (= OR_16.19.26 54))
(assert (= Smt.true (is NULLLIT_15.45.26 T_int)))
(assert (= NULLLIT_15.45.26 111))
(assert (= Smt.true (is ASGRSHIFT_16.47.26 T_int)))
(assert (= ASGRSHIFT_16.47.26 80))
(assert (forall ((?s_5_ Int)) (=> (not (= ?s_5_ null)) (= Smt.true (is (select1 seqExpr_4.1145.46 ?s_5_) T_javafe.util.StackVector)))))
(assert (forall ((?s_5_ Int)) (=> (not (= ?s_5_ null)) (not (= (select1 seqExpr_4.1145.46 ?s_5_) null)))))
(assert (forall ((?s_5_ Int)) (=> (not (= ?s_5_ null)) (= (typeof (select1 seqExpr_4.1145.46 ?s_5_)) T_javafe.util.StackVector))))
(assert (= Smt.true (is LOCALVARDECL_17.22.7 T_int)))
(assert (= LOCALVARDECL_17.22.7 8))
(assert (= Smt.true (is RSHIFT_16.31.26 T_int)))
(assert (= RSHIFT_16.31.26 66))
(assert (forall ((?s_6_ Int)) (=> (not (= ?s_6_ null)) (= Smt.true (is (select1 seqStmt_70.46 ?s_6_) T_javafe.util.StackVector)))))
(assert (forall ((?s_6_ Int)) (=> (not (= ?s_6_ null)) (not (= (select1 seqStmt_70.46 ?s_6_) null)))))
(assert (forall ((?s_6_ Int)) (=> (not (= ?s_6_ null)) (= (typeof (select1 seqStmt_70.46 ?s_6_)) T_javafe.util.StackVector))))
(assert (= Smt.true (is INSTANCEOFEXPR_17.52.7 T_int)))
(assert (= INSTANCEOFEXPR_17.52.7 38))
(assert (= Smt.true (is TYPEOBJECTDESIGNATOR_17.62.7 T_int)))
(assert (= TYPEOBJECTDESIGNATOR_17.62.7 48))
(assert (= Smt.true (is TRYFINALLYSTMT_17.42.7 T_int)))
(assert (= TRYFINALLYSTMT_17.42.7 28))
(assert (= Smt.true (is CHARTYPE_15.30.26 T_int)))
(assert (= CHARTYPE_15.30.26 97))
(assert (= Smt.true (is STRINGLIT_15.44.26 T_int)))
(assert (= STRINGLIT_15.44.26 110))
(assert (= Smt.true (is EVALSTMT_17.32.7 T_int)))
(assert (= EVALSTMT_17.32.7 18))
(assert (= Smt.true (is ASGLSHIFT_16.46.26 T_int)))
(assert (= ASGLSHIFT_16.46.26 79))
(assert (= Smt.true (is RETURN_14.87.26 T_int)))
(assert (= RETURN_14.87.26 168))
(assert (= Smt.true (is COMMA_14.33.26 T_int)))
(assert (= COMMA_14.33.26 120))
(assert (= Smt.true (is DO_14.63.26 T_int)))
(assert (= DO_14.63.26 144))
(assert (= Smt.true (is LSHIFT_16.30.26 T_int)))
(assert (= LSHIFT_16.30.26 65))
(assert (= Smt.true (is INITBLOCK_17.21.7 T_int)))
(assert (= INITBLOCK_17.21.7 7))
(assert (= Smt.true (is POSTFIXDEC_16.63.26 T_int)))
(assert (= POSTFIXDEC_16.63.26 92))
(assert (= Smt.true (is LONGTYPE_15.29.26 T_int)))
(assert (= LONGTYPE_15.29.26 96))
(assert (= Smt.true (is TRY_14.99.26 T_int)))
(assert (= TRY_14.99.26 180))
(assert (= Smt.true (is DOUBLELIT_15.43.26 T_int)))
(assert (= DOUBLELIT_15.43.26 109))
(assert (= Smt.true (is ASGSUB_16.45.26 T_int)))
(assert (= ASGSUB_16.45.26 78))
(assert (= Smt.true (is DEFAULT_14.62.26 T_int)))
(assert (= DEFAULT_14.62.26 143))
(assert (= Smt.true (is SWITCHLABEL_17.41.7 T_int)))
(assert (= SWITCHLABEL_17.41.7 27))
(assert (= Smt.true (is CONDEXPR_17.51.7 T_int)))
(assert (= CONDEXPR_17.51.7 37))
(assert (= Smt.true (is SYNCHRONIZESTMT_17.31.7 T_int)))
(assert (= SYNCHRONIZESTMT_17.31.7 17))
(assert (= Smt.true (is FIELD_14.45.26 T_int)))
(assert (= FIELD_14.45.26 130))
(assert (= Smt.true (is LT_16.29.26 T_int)))
(assert (= LT_16.29.26 64))
(assert (= Smt.true (is EXPROBJECTDESIGNATOR_17.61.7 T_int)))
(assert (= EXPROBJECTDESIGNATOR_17.61.7 47))
(assert (= Smt.true (is POSTFIXINC_16.62.26 T_int)))
(assert (= POSTFIXINC_16.62.26 91))
(assert (= Smt.true (is METHODDECL_17.20.7 T_int)))
(assert (= METHODDECL_17.20.7 6))
(assert (= Smt.true (is INTTYPE_15.28.26 T_int)))
(assert (= INTTYPE_15.28.26 95))
(assert (= Smt.true (is FLOATLIT_15.42.26 T_int)))
(assert (= FLOATLIT_15.42.26 108))
(assert (= Smt.true (is ASGADD_16.44.26 T_int)))
(assert (= ASGADD_16.44.26 77))
(assert (= Smt.true (is CONTINUE_14.61.26 T_int)))
(assert (= CONTINUE_14.61.26 142))
(assert (= Smt.true (is TYPEMODIFIERPRAGMA_14.28.26 T_int)))
(assert (= TYPEMODIFIERPRAGMA_14.28.26 118))
(assert (= Smt.true (is COLON_14.43.26 T_int)))
(assert (= COLON_14.43.26 129))
(assert (= Smt.true (is LE_16.28.26 T_int)))
(assert (= LE_16.28.26 63))
(assert (= Smt.true (is NEWARRAYEXPR_17.50.7 T_int)))
(assert (= NEWARRAYEXPR_17.50.7 36))
(assert (= Smt.true (is SKIPSTMT_17.40.7 T_int)))
(assert (= SKIPSTMT_17.40.7 26))
(assert (= Smt.true (is DOSTMT_17.30.7 T_int)))
(assert (= DOSTMT_17.30.7 16))
(assert (= Smt.true (is DEC_16.59.26 T_int)))
(assert (= DEC_16.59.26 90))
(assert (= Smt.true (is otherStrings_14.193.30 (array T_java.lang.String))))
(assert (not (= otherStrings_14.193.30 null)))
(assert (= (typeof otherStrings_14.193.30) (array T_java.lang.String)))
(assert (= (arrayLength otherStrings_14.193.30) 15))
(assert (forall ((?n Int)) (! (=> (and (<= 0 ?n) (< ?n 63)) (<= 1 (longShiftL 1 ?n))) :pattern ((longShiftL 1 ?n)) )))
(assert (forall ((?n Int)) (! (=> (and (<= 0 ?n) (< ?n 31)) (<= 1 (intShiftL 1 ?n))) :pattern ((intShiftL 1 ?n)) )))
(assert (forall ((?x Int) (?y Int)) (! (=> (and (<= 0 ?x) (<= 0 ?y)) (<= 0 (integralXor ?x ?y))) :pattern ((integralXor ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (let ((?v_0 (integralDiv ?x ?y))) (=> (and (<= 0 ?x) (< 0 ?y)) (and (<= 0 ?v_0) (<= ?v_0 ?x)))) :pattern ((integralDiv ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (let ((?v_0 (integralOr ?x ?y))) (=> (and (<= 0 ?x) (<= 0 ?y)) (and (<= ?x ?v_0) (<= ?y ?v_0)))) :pattern ((integralOr ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (=> (<= 0 ?y) (<= (integralAnd ?x ?y) ?y)) :pattern ((integralAnd ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (=> (<= 0 ?x) (<= (integralAnd ?x ?y) ?x)) :pattern ((integralAnd ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (=> (or (<= 0 ?x) (<= 0 ?y)) (<= 0 (integralAnd ?x ?y))) :pattern ((integralAnd ?x ?y)) )))
(assert (forall ((?t Int)) (! (let ((?v_0 (classLiteral ?t))) (and (not (= ?v_0 null)) (= Smt.true (is ?v_0 T_java.lang.Class)) (isAllocated ?v_0 alloc))) :pattern ((classLiteral ?t)) )))
(assert (forall ((?x Int) (?e Int)) (= (nonnullelements ?x ?e) (and (not (= ?x null)) (forall ((?i Int)) (=> (and (<= 0 ?i) (< ?i (arrayLength ?x))) (not (= (select1 (select1 ?e ?x) ?i) null))))))))
(assert (forall ((?b Int) (?x Int) (?y Int)) (! (=> (not (= ?b Smt.true)) (= (termConditional ?b ?x ?y) ?y)) :pattern ((termConditional ?b ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (termConditional Smt.true ?x ?y) ?x) :pattern ((termConditional Smt.true ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (refNE ?x ?y) Smt.true) (not (= ?x ?y))) :pattern ((refNE ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (refEQ ?x ?y) Smt.true) (= ?x ?y)) :pattern ((refEQ ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (integralNE ?x ?y) Smt.true) (not (= ?x ?y))) :pattern ((integralNE ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (integralLT ?x ?y) Smt.true) (< ?x ?y)) :pattern ((integralLT ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (integralLE ?x ?y) Smt.true) (<= ?x ?y)) :pattern ((integralLE ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (integralGT ?x ?y) Smt.true) (> ?x ?y)) :pattern ((integralGT ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (integralGE ?x ?y) Smt.true) (>= ?x ?y)) :pattern ((integralGE ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (let ((?v_0 (stringCat ?x ?y))) (and (not (= ?v_0 null)) (subtypes (typeof ?v_0) T_java.lang.String))) :pattern ((stringCat ?x ?y)) )))
(assert (forall ((?x Int) (?y Int)) (! (= (= (integralEQ ?x ?y) Smt.true) (= ?x ?y)) :pattern ((integralEQ ?x ?y)) )))
(assert (forall ((?a Int) (?b Int)) (= (boolOr ?a ?b) (or (= ?a Smt.true) (= ?b Smt.true)))))
(assert (forall ((?a Int)) (= (boolNot ?a) (not (= ?a Smt.true)))))
(assert (forall ((?a Int) (?b Int)) (= (boolNE ?a ?b) (not (= (= ?a Smt.true) (= ?b Smt.true))))))
(assert (forall ((?a Int) (?b Int)) (= (boolImplies ?a ?b) (=> (= ?a Smt.true) (= ?b Smt.true)))))
(assert (forall ((?a Int) (?b Int)) (= (boolEq ?a ?b) (= (= ?a Smt.true) (= ?b Smt.true)))))
(assert (forall ((?a Int) (?b Int)) (= (boolAnd ?a ?b) (and (= ?a Smt.true) (= ?b Smt.true)))))
(assert (forall ((?x Int) (?y Int)) (let ((?v_0 (multiply ?x ?y))) (= (multiply (integralDiv ?v_0 ?y) ?y) ?v_0))))
(assert (forall ((?i Int) (?j Int)) (= (integralMod (+ ?j ?i) ?j) (integralMod ?i ?j))))
(assert (forall ((?i Int) (?j Int)) (= (integralMod (+ ?i ?j) ?j) (integralMod ?i ?j))))
(assert (forall ((?i Int) (?j Int)) (! (let ((?v_0 (integralMod ?i ?j))) (=> (< ?j 0) (and (< ?j ?v_0) (<= ?v_0 0)))) :pattern ((integralMod ?i ?j)) )))
(assert (forall ((?i Int) (?j Int)) (! (let ((?v_0 (integralMod ?i ?j))) (=> (< 0 ?j) (and (<= 0 ?v_0) (< ?v_0 ?j)))) :pattern ((integralMod ?i ?j)) )))
(assert (forall ((?i Int) (?j Int)) (! (= (+ (multiply (integralDiv ?i ?j) ?j) (integralMod ?i ?j)) ?i) :pattern ((integralMod ?i ?j))  :pattern ((integralDiv ?i ?j)) )))
(assert (forall ((?s Int)) (! (=> (= Smt.true (isNewArray ?s)) (subtypes (typeof ?s) arrayType)) :pattern ((isNewArray ?s)) )))
(assert (forall ((?t Int)) (! (subtypes (array ?t) arrayType) :pattern ((array ?t)) )))
(assert (= arrayType (asChild arrayType T_java.lang.Object)))
(assert (forall ((?a Int) (?a0 Int) (?b0 Int) (?e Int) (?n Int) (?T Int) (?v Int)) (! (= (arrayFresh ?a ?a0 ?b0 ?e (arrayShapeOne ?n) ?T ?v) (and (<= ?a0 (vAllocTime ?a)) (isAllocated ?a ?b0) (not (= ?a null)) (= (typeof ?a) ?T) (= (arrayLength ?a) ?n) (forall ((?i Int)) (! (= (select1 (select1 ?e ?a) ?i) ?v) :pattern ((select1 (select1 ?e ?a) ?i)) )))) :pattern ((arrayFresh ?a ?a0 ?b0 ?e (arrayShapeOne ?n) ?T ?v)) )))
(assert (forall ((?a Int) (?a0 Int) (?b0 Int) (?e Int) (?n Int) (?s Int) (?T Int) (?v Int)) (! (= (arrayFresh ?a ?a0 ?b0 ?e (arrayShapeMore ?n ?s) ?T ?v) (and (<= ?a0 (vAllocTime ?a)) (isAllocated ?a ?b0) (not (= ?a null)) (= (typeof ?a) ?T) (= (arrayLength ?a) ?n) (forall ((?i Int)) (! (let ((?v_0 (select1 (select1 ?e ?a) ?i))) (and (arrayFresh ?v_0 ?a0 ?b0 ?e ?s (elemtype ?T) ?v) (= (arrayParent ?v_0) ?a) (= (arrayPosition ?v_0) ?i))) :pattern ((select1 (select1 ?e ?a) ?i)) )))) :pattern ((arrayFresh ?a ?a0 ?b0 ?e (arrayShapeMore ?n ?s) ?T ?v)) )))
(assert (forall ((?a Int)) (! (let ((?v_0 (arrayLength ?a))) (and (<= 0 ?v_0) (= Smt.true (is ?v_0 T_int)))) :pattern ((arrayLength ?a)) )))
(assert (forall ((?x Int)) (! (=> (subtypes (typeof ?x) T_java.lang.Object) (lockLE null ?x)) :pattern ((lockLE null ?x))  :pattern ((lockLT null ?x))  :pattern ((lockLE ?x null))  :pattern ((lockLT ?x null)) )))
(assert (forall ((?S Int) (?mu Int)) (let ((?v_0 (asLockSet ?S))) (=> (= (select1 ?v_0 ?mu) Smt.true) (lockLE ?mu (max ?v_0))))))
(assert (forall ((?x Int) (?y Int)) (= (lockLT ?x ?y) (< ?x ?y))))
(assert (forall ((?x Int) (?y Int)) (= (lockLE ?x ?y) (<= ?x ?y))))
(assert (forall ((?S Int)) (! (= (select1 (asLockSet ?S) null) Smt.true) :pattern ((asLockSet ?S)) )))
(assert (forall ((?S Int)) (let ((?v_0 (asLockSet ?S))) (= (select1 ?v_0 (max ?v_0)) Smt.true))))
(assert (forall ((?a Int) (?e Int) (?i Int) (?a0 Int)) (! (=> (and (< (eClosedTime ?e) ?a0) (isAllocated ?a ?a0)) (isAllocated (select1 (select1 ?e ?a) ?i) ?a0)) :pattern ((isAllocated (select1 (select1 ?e ?a) ?i) ?a0)) )))
(assert (forall ((?x Int) (?f Int) (?a0 Int)) (! (=> (and (< (fClosedTime ?f) ?a0) (isAllocated ?x ?a0)) (isAllocated (select1 ?f ?x) ?a0)) :pattern ((isAllocated (select1 ?f ?x) ?a0)) )))
(assert (forall ((?x Int) (?a0 Int)) (= (isAllocated ?x ?a0) (< (vAllocTime ?x) ?a0))))
(assert (forall ((?e Int) (?a Int) (?i Int)) (! (= Smt.true (is (select1 (select1 (asElems ?e) ?a) ?i) (elemtype (typeof ?a)))) :pattern ((select1 (select1 (asElems ?e) ?a) ?i)) )))
(assert (forall ((?f Int) (?t Int) (?x Int)) (! (= Smt.true (is (select1 (asField ?f ?t) ?x) ?t)) :pattern ((select1 (asField ?f ?t) ?x)) )))
(assert (forall ((?x Int) (?t Int)) (! (=> (subtypes ?t T_java.lang.Object) (= (= Smt.true (is ?x ?t)) (or (= ?x null) (subtypes (typeof ?x) ?t)))) :pattern ((subtypes ?t T_java.lang.Object) (is ?x ?t)) )))
(assert (< intLast longLast))
(assert (< 1000000 intLast))
(assert (< intFirst (- 1000000)))
(assert (< longFirst intFirst))
(assert (forall ((?x Int)) (! (= (= Smt.true (is ?x T_long)) (and (<= longFirst ?x) (<= ?x longLast))) :pattern ((is ?x T_long)) )))
(assert (forall ((?x Int)) (! (= (= Smt.true (is ?x T_int)) (and (<= intFirst ?x) (<= ?x intLast))) :pattern ((is ?x T_int)) )))
(assert (forall ((?x Int)) (= (= Smt.true (is ?x T_short)) (and (<= (- 32768) ?x) (<= ?x 32767)))))
(assert (forall ((?x Int)) (= (= Smt.true (is ?x T_byte)) (and (<= (- 128) ?x) (<= ?x 127)))))
(assert (forall ((?x Int)) (! (= (= Smt.true (is ?x T_char)) (and (<= 0 ?x) (<= ?x 65535))) :pattern ((is ?x T_char)) )))
(assert (distinct bool_false Smt.true))
(assert (forall ((?x Int) (?t Int)) (! (=> (= Smt.true (is ?x ?t)) (= (cast ?x ?t) ?x)) :pattern ((cast ?x ?t)) )))
(assert (forall ((?x Int) (?t Int)) (! (= Smt.true (is (cast ?x ?t) ?t)) :pattern ((cast ?x ?t)) )))
(assert (forall ((?t0 Int) (?t1 Int)) (! (let ((?v_0 (elemtype ?t0))) (= (subtypes ?t0 (array ?t1)) (and (= ?t0 (array ?v_0)) (subtypes ?v_0 ?t1)))) :pattern ((subtypes ?t0 (array ?t1))) )))
(assert (forall ((?t Int)) (! (= (elemtype (array ?t)) ?t) :pattern ((elemtype (array ?t))) )))
(assert (forall ((?t Int)) (! (subtypes (array ?t) T_java.lang.Cloneable) :pattern ((array ?t)) )))
(assert (subtypes T_java.lang.Cloneable T_java.lang.Object))
(assert (forall ((?t0 Int) (?t1 Int) (?t2 Int)) (let ((?v_0 (asChild ?t1 ?t2))) (=> (subtypes ?t0 ?v_0) (= (classDown ?t2 ?t0) ?v_0)))))
(assert (forall ((?t Int)) (! (=> (subtypes T_double ?t) (= ?t T_double)) :pattern ((subtypes T_double ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes T_float ?t) (= ?t T_float)) :pattern ((subtypes T_float ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes T_long ?t) (= ?t T_long)) :pattern ((subtypes T_long ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes T_int ?t) (= ?t T_int)) :pattern ((subtypes T_int ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes T_short ?t) (= ?t T_short)) :pattern ((subtypes T_short ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes T_byte ?t) (= ?t T_byte)) :pattern ((subtypes T_byte ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes T_char ?t) (= ?t T_char)) :pattern ((subtypes T_char ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes T_boolean ?t) (= ?t T_boolean)) :pattern ((subtypes T_boolean ?t)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_double) (= ?t T_double)) :pattern ((subtypes ?t T_double)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_float) (= ?t T_float)) :pattern ((subtypes ?t T_float)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_long) (= ?t T_long)) :pattern ((subtypes ?t T_long)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_int) (= ?t T_int)) :pattern ((subtypes ?t T_int)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_short) (= ?t T_short)) :pattern ((subtypes ?t T_short)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_byte) (= ?t T_byte)) :pattern ((subtypes ?t T_byte)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_char) (= ?t T_char)) :pattern ((subtypes ?t T_char)) )))
(assert (forall ((?t Int)) (! (=> (subtypes ?t T_boolean) (= ?t T_boolean)) :pattern ((subtypes ?t T_boolean)) )))
(assert (forall ((?t0 Int) (?t1 Int)) (! (=> (and (subtypes ?t0 ?t1) (subtypes ?t1 ?t0)) (= ?t0 ?t1)) :pattern ((subtypes ?t0 ?t1) (subtypes ?t1 ?t0)) )))
(assert (forall ((?t0 Int) (?t1 Int) (?t2 Int)) (! (=> (and (subtypes ?t0 ?t1) (subtypes ?t1 ?t2)) (subtypes ?t0 ?t2)) :pattern ((subtypes ?t0 ?t1) (subtypes ?t1 ?t2)) )))
(assert (subtypes T_java.lang.Object T_java.lang.Object))
(assert (forall ((?t Int)) (! (subtypes ?t ?t) :pattern ((subtypes ?t ?t)) )))
(assert (forall ((?m Int) (?i Int) (?j Int) (?x Int)) (=> (not (= ?i ?j)) (= (select1 (store1 ?m ?i ?x) ?j) (select1 ?m ?j)))))
(assert (forall ((?m Int) (?i Int) (?x Int)) (= (select1 (store1 ?m ?i ?x) ?i) ?x)))
(assert (let ((?v_0 (array T_int)) (?v_1 (array T_java.lang.String)) (?v_3 (arrayLength keywordStrings_14.181.30)) (?v_2 (arrayLength punctuationStrings_14.134.22)) (?v_4 (arrayLength otherStrings_14.193.30)) (?v_6 (not (= l_110.33 null))) (?v_7 (not (= (select1 m_in_9.212.46 l_110.33) null))) (?v_5 (select1 owner_7.35.28 punctuationCodes_14.164.19))) (let ((?v_11 (not ?v_6)) (?v_8 (= (select1 ttype_10.52.15 l_110.33) LBRACE_14.35.26)) (?v_9 (= Smt.true Smt.true)) (?v_12 (not (and ?v_6 ?v_7)))) (let ((?v_27 (not ?v_8)) (?v_13 (select1 seqStmt_70.46 this))) (let ((?v_28 (= this_114.14_114.14 ?v_13)) (?v_29 (= vectorCount_114.14_8.282.17 (store1 vectorCount_8.97.33 this_114.14_114.14 after_114.14_114.14_8.282.17))) (?v_30 (= currentStackBottom_114.14_8.282.30 (store1 currentStackBottom_8.87.33 this_114.14_114.14 after_114.14_114.14_8.282.30))) (?v_31 (= vectorCount_114.14_8.282.17 (asField vectorCount_114.14_8.282.17 T_int))) (?v_32 (= currentStackBottom_114.14_8.282.30 (asField currentStackBottom_114.14_8.282.30 T_int))) (?v_10 (= EC_114.14_114.14 ecReturn))) (let ((?v_33 (=> ?v_10 (= (select1 vectorCount_114.14_8.282.17 this_114.14_114.14) (+ (select1 vectorCount_8.97.33 this_114.14_114.14) 1)))) (?v_34 (=> ?v_10 (= (select1 currentStackBottom_114.14_8.282.30 this_114.14_114.14) (select1 elementCount_8.79.33 this_114.14_114.14)))) (?v_35 (forall ((?brokenObj_40_ Int)) (=> (and (= Smt.true (is ?brokenObj_40_ T_javafe.util.StackVector)) (not (= ?brokenObj_40_ null)) (>= (select1 vectorCount_8.97.33 ?brokenObj_40_) 1)) (>= (select1 vectorCount_114.14_8.282.17 ?brokenObj_40_) 1)))) (?v_36 (forall ((?brokenObj_41_ Int)) (let ((?v_66 (select1 currentStackBottom_8.87.33 ?brokenObj_41_)) (?v_67 (select1 elems (select1 elements_8.72.21 ?brokenObj_41_))) (?v_68 (select1 currentStackBottom_114.14_8.282.30 ?brokenObj_41_))) (=> (and (= Smt.true (is ?brokenObj_41_ T_javafe.util.StackVector)) (not (= ?brokenObj_41_ null)) (or (= ?v_66 0) (= (select1 ?v_67 (- ?v_66 1)) null))) (or (= ?v_68 0) (= (select1 ?v_67 (- ?v_68 1)) null)))))) (?v_37 (forall ((?brokenObj_42_ Int)) (let ((?v_69 (select1 currentStackBottom_8.87.33 ?brokenObj_42_)) (?v_71 (select1 elementCount_8.79.33 ?brokenObj_42_)) (?v_70 (select1 currentStackBottom_114.14_8.282.30 ?brokenObj_42_))) (=> (and (= Smt.true (is ?brokenObj_42_ T_javafe.util.StackVector)) (not (= ?brokenObj_42_ null)) (<= 0 ?v_69) (<= ?v_69 ?v_71)) (and (<= 0 ?v_70) (<= ?v_70 ?v_71)))))) (?v_38 (= loc_115.6 (select1 startingLoc_10.65.15 l_110.33))) (?v_39 (= elementCount_116.6_146.23 (store1 elementCount_8.79.33 ?v_13 after_116.6_116.6_146.15))) (?v_40 (= currentStackBottom_116.6_146.45 (store1 currentStackBottom_114.14_8.282.30 ?v_13 after_116.6_116.6_146.37))) (?v_41 (= elementCount_116.6_146.23 (asField elementCount_116.6_146.23 T_int))) (?v_42 (= currentStackBottom_116.6_146.45 (asField currentStackBottom_116.6_146.45 T_int))) (?v_14 (= EC_116.6_116.6 ecReturn))) (let ((?v_43 (=> ?v_14 (> (- (select1 elementCount_116.6_146.23 ?v_13) (select1 currentStackBottom_116.6_146.45 ?v_13)) (- (select1 elementCount_8.79.33 ?v_13) (select1 currentStackBottom_114.14_8.282.30 ?v_13))))) (?v_44 (forall ((?brokenObj_43_ Int)) (=> (and (= Smt.true (is ?brokenObj_43_ T_javafe.util.StackVector)) (not (= ?brokenObj_43_ null)) (forall ((?i_8.76.31 Int)) (let ((?v_72 (select1 (select1 elems (select1 elements_8.72.21 ?brokenObj_43_)) ?i_8.76.31))) (=> (and (<= 0 ?i_8.76.31) (< ?i_8.76.31 (select1 elementCount_8.79.33 ?brokenObj_43_))) (or (= ?v_72 null) (subtypes (typeof ?v_72) (select1 elementType_8.43.27 ?brokenObj_43_))))))) (forall ((?i_8.76.31 Int)) (let ((?v_73 (select1 (select1 elems (select1 elements_8.72.21 ?brokenObj_43_)) ?i_8.76.31))) (=> (and (<= 0 ?i_8.76.31) (< ?i_8.76.31 (select1 elementCount_116.6_146.23 ?brokenObj_43_))) (or (= ?v_73 null) (subtypes (typeof ?v_73) (select1 elementType_8.43.27 ?brokenObj_43_))))))))) (?v_45 (forall ((?brokenObj_44_ Int)) (let ((?v_74 (select1 currentStackBottom_114.14_8.282.30 ?brokenObj_44_)) (?v_75 (select1 elems (select1 elements_8.72.21 ?brokenObj_44_))) (?v_76 (select1 currentStackBottom_116.6_146.45 ?brokenObj_44_))) (=> (and (= Smt.true (is ?brokenObj_44_ T_javafe.util.StackVector)) (not (= ?brokenObj_44_ null)) (or (= ?v_74 0) (= (select1 ?v_75 (- ?v_74 1)) null))) (or (= ?v_76 0) (= (select1 ?v_75 (- ?v_76 1)) null)))))) (?v_46 (forall ((?brokenObj_45_ Int)) (let ((?v_77 (select1 currentStackBottom_114.14_8.282.30 ?brokenObj_45_)) (?v_78 (select1 currentStackBottom_116.6_146.45 ?brokenObj_45_))) (=> (and (= Smt.true (is ?brokenObj_45_ T_javafe.util.StackVector)) (not (= ?brokenObj_45_ null)) (<= 0 ?v_77) (<= ?v_77 (select1 elementCount_8.79.33 ?brokenObj_45_))) (and (<= 0 ?v_78) (<= ?v_78 (select1 elementCount_116.6_146.23 ?brokenObj_45_))))))) (?v_47 (forall ((?brokenObj_46_ Int)) (let ((?v_79 (select1 elementCount_8.79.33 ?brokenObj_46_)) (?v_81 (arrayLength (select1 elements_8.72.21 ?brokenObj_46_))) (?v_80 (select1 elementCount_116.6_146.23 ?brokenObj_46_))) (=> (and (= Smt.true (is ?brokenObj_46_ T_javafe.util.StackVector)) (not (= ?brokenObj_46_ null)) (<= 0 ?v_79) (<= ?v_79 ?v_81)) (and (<= 0 ?v_80) (<= ?v_80 ?v_81)))))) (?v_48 (= tmp1_seqStmt_117.26 ?v_13)) (?v_49 (= Smt.true (is RES_117.34_117.34 T_java.lang.Object))) (?v_50 (isAllocated RES_117.34_117.34 alloc)) (?v_15 (= EC_117.34_117.34 ecReturn))) (let ((?v_51 (=> ?v_15 (subtypes (typeof RES_117.34_117.34) (select1 elementType_8.43.27 tmp1_seqStmt_117.26)))) (?v_52 (=> ?v_15 (not (= RES_117.34_117.34 null)))) (?v_16 (= Smt.true (is RES_117.34_117.34 T_javafe.ast.Stmt))) (?v_53 (= result_117.6 (cast RES_117.34_117.34 T_javafe.ast.Stmt))) (?v_54 (= this_118.18_118.18 ?v_13)) (?v_55 (= Smt.true (is RES_118.18_118.18 T_int))) (?v_17 (= EC_118.18_118.18 ecReturn))) (let ((?v_56 (=> ?v_17 (>= RES_118.18_118.18 0))) (?v_57 (=> ?v_17 (= RES_118.18_118.18 (- (select1 elementCount_116.6_146.23 this_118.18_118.18) (select1 currentStackBottom_116.6_146.45 this_118.18_118.18))))) (?v_18 (not (= RES_118.18_118.18 1))) (?v_19 (= Smt.true tmp2_cor_118.30))) (let ((?v_58 (or (and ?v_18 ?v_9 (= tmp2_cor_118.30 Smt.true)) (and (not ?v_18) (= tmp2_cor_118.10 (boolAnd (is result_117.6 T_javafe.ast.VarDeclStmt) (refNE result_117.6 null))) (= ?v_19 tmp2_cor_118.10)))) (?v_20 (not (= loc_115.6 NULL_12.60.26)))) (let ((?v_22 (not ?v_20)) (?v_21 (= EC_119.1_119.1 ecReturn))) (let ((?v_59 (or (and ?v_19 ?v_9 ?v_20 ?v_21 (not ?v_21) (= RES RES_119.1_119.1) (= EC EC_119.1_119.1)) (and (not ?v_19) ?v_9 (= RES RES_118.18_118.18) (= EC EC_118.18_118.18)))) (?v_23 (= Smt.true (is result_117.6 T_javafe.ast.StmtPragma))) (?v_24 (not (= result_117.6 null))) (?v_25 (= EC_123.1_123.1 ecReturn))) (let ((?v_60 (or (and ?v_23 ?v_24 ?v_9 ?v_20 ?v_25 (not ?v_25) (= RES_1_ RES_123.1_123.1) (= EC_1_ EC_123.1_123.1)) (and (not (and ?v_23 ?v_24)) ?v_9 (= RES_1_ RES) (= EC_1_ EC)))) (?v_61 (= this_127.14_127.14 ?v_13)) (?v_64 (select1 vectorCount_114.14_8.282.17 this_127.14_127.14))) (let ((?v_62 (>= ?v_64 2)) (?v_26 (= EC_112.13_112.13 ecReturn)) (?v_63 (= EC_127.14_127.14 ecReturn)) (?v_65 (= ecReturn ecReturn))) (not (=> true (=> (and (= noTokens_pre_14.212.27 noTokens_14.212.27) (= Smt.true (is noTokens_14.212.27 T_int)) (= BOOLEANTYPE_pre_15.27.26 BOOLEANTYPE_15.27.26) (= Smt.true (is BOOLEANTYPE_15.27.26 T_int)) (= IF_pre_14.73.26 IF_14.73.26) (= Smt.true (is IF_14.73.26 T_int)) (= locOpenParen_pre_52.23.13 locOpenParen_52.23.13) (= locOpenParen_52.23.13 (asField locOpenParen_52.23.13 T_int)) (= elements_pre_62.61.33 elements_62.61.33) (= elements_62.61.33 (asField elements_62.61.33 (array T_javafe.ast.Expr))) (< (fClosedTime elements_62.61.33) alloc) (forall ((?s Int)) (=> (not (= ?s null)) (not (= (select1 elements_62.61.33 ?s) null)))) (= CHARLIT_pre_15.41.26 CHARLIT_15.41.26) (= Smt.true (is CHARLIT_15.41.26 T_int)) (= tag_pre_71.30.13 tag_71.30.13) (= tag_71.30.13 (asField tag_71.30.13 T_int)) (= ASGREM_pre_16.43.26 ASGREM_16.43.26) (= Smt.true (is ASGREM_16.43.26 T_int)) (= TYPEDECLELEMPRAGMA_pre_14.27.26 TYPEDECLELEMPRAGMA_14.27.26) (= Smt.true (is TYPEDECLELEMPRAGMA_14.27.26 T_int)) (= CLASSLITERAL_pre_17.60.7 CLASSLITERAL_17.60.7) (= Smt.true (is CLASSLITERAL_17.60.7 T_int)) (= locGuardOpenParen_pre_49.23.13 locGuardOpenParen_49.23.13) (= locGuardOpenParen_49.23.13 (asField locGuardOpenParen_49.23.13 T_int)) (= CONSTRUCTORDECL_pre_17.19.7 CONSTRUCTORDECL_17.19.7) (= Smt.true (is CONSTRUCTORDECL_17.19.7 T_int)) (= GT_pre_16.27.26 GT_16.27.26) (= Smt.true (is GT_16.27.26 T_int)) (= loc_pre_145.21.13 loc_145.21.13) (= loc_145.21.13 (asField loc_145.21.13 T_int)) (= superCall_pre_58.24.17 superCall_58.24.17) (= superCall_58.24.17 (asField superCall_58.24.17 T_boolean)) (= ttype_pre_10.52.15 ttype_10.52.15) (= ttype_10.52.15 (asField ttype_10.52.15 T_int)) (= INC_pre_16.58.26 INC_16.58.26) (= Smt.true (is INC_16.58.26 T_int)) (= punctuationCodes_pre_14.164.19 punctuationCodes_14.164.19) (= Smt.true (is punctuationCodes_14.164.19 ?v_0)) (isAllocated punctuationCodes_14.164.19 alloc) (= locFinally_pre_55.25.13 locFinally_55.25.13) (= locFinally_55.25.13 (asField locFinally_55.25.13 T_int)) (= locDot_pre_135.21.13 locDot_135.21.13) (= locDot_135.21.13 (asField locDot_135.21.13 T_int)) (= FORSTMT_pre_17.39.7 FORSTMT_17.39.7) (= Smt.true (is FORSTMT_17.39.7 T_int)) (= WHILESTMT_pre_17.29.7 WHILESTMT_17.29.7) (= Smt.true (is WHILESTMT_17.29.7 T_int)) (= loc_pre_63.29.13 loc_63.29.13) (= loc_63.29.13 (asField loc_63.29.13 T_int)) (= IDENT_pre_15.25.26 IDENT_15.25.26) (= Smt.true (is IDENT_15.25.26 T_int)) (= locOpenBrace_pre_13.51.13 locOpenBrace_13.51.13) (= locOpenBrace_13.51.13 (asField locOpenBrace_13.51.13 T_int)) (= LONGLIT_pre_15.40.26 LONGLIT_15.40.26) (= Smt.true (is LONGLIT_15.40.26 T_int)) (= locCloseBrace_pre_69.24.13 locCloseBrace_69.24.13) (= locCloseBrace_69.24.13 (asField locCloseBrace_69.24.13 T_int)) (= ASGDIV_pre_16.42.26 ASGDIV_16.42.26) (= Smt.true (is ASGDIV_16.42.26 T_int)) (= STMTPRAGMA_pre_14.26.26 STMTPRAGMA_14.26.26) (= Smt.true (is STMTPRAGMA_14.26.26 T_int)) (= locIds_pre_159.25.29 locIds_159.25.29) (= locIds_159.25.29 (asField locIds_159.25.29 ?v_0)) (< (fClosedTime locIds_159.25.29) alloc) (forall ((?s_1_ Int)) (=> (not (= ?s_1_ null)) (not (= (select1 locIds_159.25.29 ?s_1_) null)))) (= locOpenParen_pre_146.21.13 locOpenParen_146.21.13) (= locOpenParen_146.21.13 (asField locOpenParen_146.21.13 T_int)) (= NEWINSTANCEEXPR_pre_17.49.7 NEWINSTANCEEXPR_17.49.7) (= Smt.true (is NEWINSTANCEEXPR_17.49.7 T_int)) (= loc_pre_54.23.13 loc_54.23.13) (= loc_54.23.13 (asField loc_54.23.13 T_int)) (= loc_pre_47.22.13 loc_47.22.13) (= loc_47.22.13 (asField loc_47.22.13 T_int)) (= CLASS_pre_14.59.26 CLASS_14.59.26) (= Smt.true (is CLASS_14.59.26 T_int)) (= GE_pre_16.26.26 GE_16.26.26) (= Smt.true (is GE_16.26.26 T_int)) (= METHODINVOCATION_pre_17.59.7 METHODINVOCATION_17.59.7) (= Smt.true (is METHODINVOCATION_17.59.7 T_int)) (= type_pre_152.20.28 type_152.20.28) (= type_152.20.28 (asField type_152.20.28 T_javafe.ast.Type)) (< (fClosedTime type_152.20.28) alloc) (forall ((?s_2_ Int)) (=> (not (= ?s_2_ null)) (not (= (select1 type_152.20.28 ?s_2_) null)))) (= elements_pre_53.61.40 elements_53.61.40) (= elements_53.61.40 (asField elements_53.61.40 (array T_javafe.ast.CatchClause))) (< (fClosedTime elements_53.61.40) alloc) (forall ((?s_3_ Int)) (=> (not (= ?s_3_ null)) (not (= (select1 elements_53.61.40 ?s_3_) null)))) (= seqVarInit_pre_4.1153.46 seqVarInit_4.1153.46) (= seqVarInit_4.1153.46 (asField seqVarInit_4.1153.46 T_javafe.util.StackVector)) (< (fClosedTime seqVarInit_4.1153.46) alloc) (forall ((?s_4_ Int)) (=> (not (= ?s_4_ null)) (not (= (select1 seqVarInit_4.1153.46 ?s_4_) null)))) (= INTERFACEDECL_pre_17.18.7 INTERFACEDECL_17.18.7) (= Smt.true (is INTERFACEDECL_17.18.7 T_int)) (= BITNOT_pre_16.57.26 BITNOT_16.57.26) (= Smt.true (is BITNOT_16.57.26 T_int)) (= elements_pre_57.61.43 elements_57.61.43) (= elements_57.61.43 (asField elements_57.61.43 (array T_javafe.ast.ModifierPragma))) (< (fClosedTime elements_57.61.43) alloc) (forall ((?s_5_ Int)) (=> (not (= ?s_5_ null)) (not (= (select1 elements_57.61.43 ?s_5_) null)))) (= loc_pre_48.20.13 loc_48.20.13) (= loc_48.20.13 (asField loc_48.20.13 T_int)) (= INTLIT_pre_15.39.26 INTLIT_15.39.26) (= Smt.true (is INTLIT_15.39.26 T_int)) (= seqIdentifier_pre_5.33.46 seqIdentifier_5.33.46) (= seqIdentifier_5.33.46 (asField seqIdentifier_5.33.46 T_javafe.util.StackVector)) (< (fClosedTime seqIdentifier_5.33.46) alloc) (forall ((?s_6_ Int)) (=> (not (= ?s_6_ null)) (not (= (select1 seqIdentifier_5.33.46 ?s_6_) null)))) (= ASGMUL_pre_16.41.26 ASGMUL_16.41.26) (= Smt.true (is ASGMUL_16.41.26 T_int)) (= nameDotLocs_pre_5.65.28 nameDotLocs_5.65.28) (= nameDotLocs_5.65.28 (asField nameDotLocs_5.65.28 ?v_0)) (< (fClosedTime nameDotLocs_5.65.28) alloc) (forall ((?s_7_ Int)) (=> (not (= ?s_7_ null)) (not (= (select1 nameDotLocs_5.65.28 ?s_7_) null)))) (= IFSTMT_pre_17.38.7 IFSTMT_17.38.7) (= Smt.true (is IFSTMT_17.38.7 T_int)) (= CLASSDECLSTMT_pre_17.28.7 CLASSDECLSTMT_17.28.7) (= Smt.true (is CLASSDECLSTMT_17.28.7 T_int)) (= MODIFIERPRAGMA_pre_14.25.26 MODIFIERPRAGMA_14.25.26) (= Smt.true (is MODIFIERPRAGMA_14.25.26 T_int)) (= count_pre_62.67.33 count_62.67.33) (= count_62.67.33 (asField count_62.67.33 T_int)) (= seqCatchClause_pre_76.46 seqCatchClause_76.46) (= seqCatchClause_76.46 (asField seqCatchClause_76.46 T_javafe.util.StackVector)) (< (fClosedTime seqCatchClause_76.46) alloc) (forall ((?s_8_ Int)) (=> (not (= ?s_8_ null)) (not (= (select1 seqCatchClause_76.46 ?s_8_) null)))) (= locCloseBrace_pre_29.25.13 locCloseBrace_29.25.13) (= locCloseBrace_29.25.13 (asField locCloseBrace_29.25.13 T_int)) (= FOR_pre_14.71.26 FOR_14.71.26) (= Smt.true (is FOR_14.71.26 T_int)) (= ARRAYREFEXPR_pre_17.48.7 ARRAYREFEXPR_17.48.7) (= Smt.true (is ARRAYREFEXPR_17.48.7 T_int)) (= locId_pre_149.24.13 locId_149.24.13) (= locId_149.24.13 (asField locId_149.24.13 T_int)) (= elementCount_pre_8.79.33 elementCount_8.79.33) (= elementCount_8.79.33 (asField elementCount_8.79.33 T_int)) (= EQ_pre_16.25.26 EQ_16.25.26) (= Smt.true (is EQ_16.25.26 T_int)) (= elements_pre_59.61.33 elements_59.61.33) (= elements_59.61.33 (asField elements_59.61.33 (array T_javafe.ast.Stmt))) (< (fClosedTime elements_59.61.33) alloc) (forall ((?s_9_ Int)) (=> (not (= ?s_9_ null)) (not (= (select1 elements_59.61.33 ?s_9_) null)))) (= AMBIGUOUSMETHODINVOCATION_pre_17.58.7 AMBIGUOUSMETHODINVOCATION_17.58.7) (= Smt.true (is AMBIGUOUSMETHODINVOCATION_17.58.7 T_int)) (= loc_pre_61.50.13 loc_61.50.13) (= loc_61.50.13 (asField loc_61.50.13 T_int)) (= keywordStrings_pre_14.181.30 keywordStrings_14.181.30) (= Smt.true (is keywordStrings_14.181.30 ?v_1)) (isAllocated keywordStrings_14.181.30 alloc) (= THROW_pre_14.95.26 THROW_14.95.26) (= Smt.true (is THROW_14.95.26 T_int)) (= loc_pre_148.22.13 loc_148.22.13) (= loc_148.22.13 (asField loc_148.22.13 T_int)) (= NOT_pre_16.56.26 NOT_16.56.26) (= Smt.true (is NOT_16.56.26 T_int)) (= loc_pre_143.49.13 loc_143.49.13) (= loc_143.49.13 (asField loc_143.49.13 T_int)) (= loc_pre_51.18.13 loc_51.18.13) (= loc_51.18.13 (asField loc_51.18.13 T_int)) (= locOpenParen_pre_150.30.13 locOpenParen_150.30.13) (= locOpenParen_150.30.13 (asField locOpenParen_150.30.13 T_int)) (= type_pre_143.24.28 type_143.24.28) (= type_143.24.28 (asField type_143.24.28 T_javafe.ast.Type)) (< (fClosedTime type_143.24.28) alloc) (forall ((?s_10_ Int)) (=> (not (= ?s_10_ null)) (not (= (select1 type_143.24.28 ?s_10_) null)))) (= locDot_pre_58.41.13 locDot_58.41.13) (= locDot_58.41.13 (asField locDot_58.41.13 T_int)) (= CLASSDECL_pre_17.17.7 CLASSDECL_17.17.7) (= Smt.true (is CLASSDECL_17.17.7 T_int)) (= auxVal_pre_10.127.18 auxVal_10.127.18) (= auxVal_10.127.18 (asField auxVal_10.127.18 T_java.lang.Object)) (< (fClosedTime auxVal_10.127.18) alloc) (= BOOLEANLIT_pre_15.38.26 BOOLEANLIT_15.38.26) (= Smt.true (is BOOLEANLIT_15.38.26 T_int)) (= ASSIGN_pre_16.40.26 ASSIGN_16.40.26) (= Smt.true (is ASSIGN_16.40.26 T_int)) (= vectorCount_pre_8.97.33 vectorCount_8.97.33) (= vectorCount_8.97.33 (asField vectorCount_8.97.33 T_int)) (= LEXICALPRAGMA_pre_14.24.26 LEXICALPRAGMA_14.24.26) (= Smt.true (is LEXICALPRAGMA_14.24.26 T_int)) (= locDots_pre_159.31.29 locDots_159.31.29) (= locDots_159.31.29 (asField locDots_159.31.29 ?v_0)) (< (fClosedTime locDots_159.31.29) alloc) (forall ((?s_11_ Int)) (=> (not (= ?s_11_ null)) (not (= (select1 locDots_159.31.29 ?s_11_) null)))) (= locOpenBrace_pre_133.36.13 locOpenBrace_133.36.13) (= locOpenBrace_133.36.13 (asField locOpenBrace_133.36.13 T_int)) (= CATCH_pre_14.57.26 CATCH_14.57.26) (= Smt.true (is CATCH_14.57.26 T_int)) (= NE_pre_16.24.26 NE_16.24.26) (= Smt.true (is NE_16.24.26 T_int)) (= locType_pre_132.21.13 locType_132.21.13) (= locType_132.21.13 (asField locType_132.21.13 T_int)) (= THISEXPR_pre_17.47.7 THISEXPR_17.47.7) (= Smt.true (is THISEXPR_17.47.7 T_int)) (= THIS_pre_14.94.26 THIS_14.94.26) (= Smt.true (is THIS_14.94.26 T_int)) (= locOpenParen_pre_151.28.13 locOpenParen_151.28.13) (= locOpenParen_151.28.13 (asField locOpenParen_151.28.13 T_int)) (= type_pre_145.18.28 type_145.18.28) (= type_145.18.28 (asField type_145.18.28 T_javafe.ast.Type)) (< (fClosedTime type_145.18.28) alloc) (forall ((?s_12_ Int)) (=> (not (= ?s_12_ null)) (not (= (select1 type_145.18.28 ?s_12_) null)))) (= NULL_pre_14.82.26 NULL_14.82.26) (= Smt.true (is NULL_14.82.26 T_int)) (= LABELSTMT_pre_17.37.7 LABELSTMT_17.37.7) (= Smt.true (is LABELSTMT_17.37.7 T_int)) (= count_pre_53.67.33 count_53.67.33) (= count_53.67.33 (asField count_53.67.33 T_int)) (= VARDECLSTMT_pre_17.27.7 VARDECLSTMT_17.27.7) (= Smt.true (is VARDECLSTMT_17.27.7 T_int)) (= UNARYSUB_pre_16.55.26 UNARYSUB_16.55.26) (= Smt.true (is UNARYSUB_16.55.26 T_int)) (= body_pre_133.34.19 body_133.34.19) (= body_133.34.19 (asField body_133.34.19 T_javafe.ast.BlockStmt)) (< (fClosedTime body_133.34.19) alloc) (= loc_pre_137.18.13 loc_137.18.13) (= loc_137.18.13 (asField loc_137.18.13 T_int)) (= elemType_pre_156.18.28 elemType_156.18.28) (= elemType_156.18.28 (asField elemType_156.18.28 T_javafe.ast.Type)) (< (fClosedTime elemType_156.18.28) alloc) (forall ((?s_13_ Int)) (=> (not (= ?s_13_ null)) (not (= (select1 elemType_156.18.28 ?s_13_) null)))) (= count_pre_57.67.33 count_57.67.33) (= count_57.67.33 (asField count_57.67.33 T_int)) (= COMPOUNDNAME_pre_17.67.7 COMPOUNDNAME_17.67.7) (= Smt.true (is COMPOUNDNAME_17.67.7 T_int)) (= SHORTTYPE_pre_15.36.26 SHORTTYPE_15.36.26) (= Smt.true (is SHORTTYPE_15.36.26 T_int)) (= op_pre_75.26.13 op_75.26.13) (= op_75.26.13 (asField op_75.26.13 T_int)) (= locId_pre_13.48.13 locId_13.48.13) (= locId_13.48.13 (asField locId_13.48.13 T_int)) (= STAR_pre_16.37.26 STAR_16.37.26) (= Smt.true (is STAR_16.37.26 T_int)) (= loc_pre_55.22.13 loc_55.22.13) (= loc_55.22.13 (asField loc_55.22.13 T_int)) (= locOpenBrace_pre_69.21.13 locOpenBrace_69.21.13) (= locOpenBrace_69.21.13 (asField locOpenBrace_69.21.13 T_int)) (= FINALLY_pre_14.69.26 FINALLY_14.69.26) (= Smt.true (is FINALLY_14.69.26 T_int)) (= FIELDACCESS_pre_17.57.7 FIELDACCESS_17.57.7) (= Smt.true (is FIELDACCESS_17.57.7 T_int)) (= ONDEMANDIMPORTDECL_pre_17.16.7 ONDEMANDIMPORTDECL_17.16.7) (= Smt.true (is ONDEMANDIMPORTDECL_17.16.7 T_int)) (= owner_pre_7.35.28 owner_7.35.28) (= owner_7.35.28 (asField owner_7.35.28 T_java.lang.Object)) (< (fClosedTime owner_7.35.28) alloc) (= type_pre_146.18.28 type_146.18.28) (= type_146.18.28 (asField type_146.18.28 T_javafe.ast.Type)) (< (fClosedTime type_146.18.28) alloc) (forall ((?s_14_ Int)) (=> (not (= ?s_14_ null)) (not (= (select1 type_146.18.28 ?s_14_) null)))) (= CASE_pre_14.56.26 CASE_14.56.26) (= Smt.true (is CASE_14.56.26 T_int)) (= loc_pre_52.20.13 loc_52.20.13) (= loc_52.20.13 (asField loc_52.20.13 T_int)) (= endingLoc_pre_10.72.15 endingLoc_10.72.15) (= endingLoc_10.72.15 (asField endingLoc_10.72.15 T_int)) (= locOpenBrackets_pre_143.65.29 locOpenBrackets_143.65.29) (= locOpenBrackets_143.65.29 (asField locOpenBrackets_143.65.29 ?v_0)) (< (fClosedTime locOpenBrackets_143.65.29) alloc) (forall ((?s_15_ Int)) (=> (not (= ?s_15_ null)) (not (= (select1 locOpenBrackets_143.65.29 ?s_15_) null)))) (= BITAND_pre_16.23.26 BITAND_16.23.26) (= Smt.true (is BITAND_16.23.26 T_int)) (= TYPESIG_pre_76.6.28 TYPESIG_76.6.28) (= Smt.true (is TYPESIG_76.6.28 T_int)) (= count_pre_59.67.33 count_59.67.33) (= count_59.67.33 (asField count_59.67.33 T_int)) (= SYNCHRONIZED_pre_14.93.26 SYNCHRONIZED_14.93.26) (= Smt.true (is SYNCHRONIZED_14.93.26 T_int)) (= RPAREN_pre_14.38.26 RPAREN_14.38.26) (= Smt.true (is RPAREN_14.38.26 T_int)) (= loc_pre_49.20.13 loc_49.20.13) (= loc_49.20.13 (asField loc_49.20.13 T_int)) (= UNARYADD_pre_16.54.26 UNARYADD_16.54.26) (= Smt.true (is UNARYADD_16.54.26 T_int)) (= CONTINUESTMT_pre_17.36.7 CONTINUESTMT_17.36.7) (= Smt.true (is CONTINUESTMT_17.36.7 T_int)) (= SWITCHSTMT_pre_17.26.7 SWITCHSTMT_17.26.7) (= Smt.true (is SWITCHSTMT_17.26.7 T_int)) (= BYTETYPE_pre_15.35.26 BYTETYPE_15.35.26) (= Smt.true (is BYTETYPE_15.35.26 T_int)) (= MOD_pre_16.36.26 MOD_16.36.26) (= Smt.true (is MOD_16.36.26 T_int)) (= ARRAYINIT_pre_17.46.7 ARRAYINIT_17.46.7) (= Smt.true (is ARRAYINIT_17.46.7 T_int)) (= loc_pre_43.18.13 loc_43.18.13) (= loc_43.18.13 (asField loc_43.18.13 T_int)) (= SIMPLENAME_pre_17.66.7 SIMPLENAME_17.66.7) (= Smt.true (is SIMPLENAME_17.66.7 T_int)) (= locOpenBrace_pre_29.22.13 locOpenBrace_29.22.13) (= locOpenBrace_29.22.13 (asField locOpenBrace_29.22.13 T_int)) (= punctuationStrings_pre_14.134.22 punctuationStrings_14.134.22) (= Smt.true (is punctuationStrings_14.134.22 ?v_1)) (isAllocated punctuationStrings_14.134.22 alloc) (= BITXOR_pre_16.22.26 BITXOR_16.22.26) (= Smt.true (is BITXOR_16.22.26 T_int)) (= VARIABLEACCESS_pre_17.56.7 VARIABLEACCESS_17.56.7) (= Smt.true (is VARIABLEACCESS_17.56.7 T_int)) (= value_pre_61.45.16 value_61.45.16) (= value_61.45.16 (asField value_61.45.16 T_java.lang.Object)) (< (fClosedTime value_61.45.16) alloc) (= SINGLETYPEIMPORTDECL_pre_17.15.7 SINGLETYPEIMPORTDECL_17.15.7) (= Smt.true (is SINGLETYPEIMPORTDECL_17.15.7 T_int)) (= SWITCH_pre_14.92.26 SWITCH_14.92.26) (= Smt.true (is SWITCH_14.92.26 T_int)) (= LPAREN_pre_14.37.26 LPAREN_14.37.26) (= Smt.true (is LPAREN_14.37.26 T_int)) (= locCloseBracket_pre_141.23.13 locCloseBracket_141.23.13) (= locCloseBracket_141.23.13 (asField locCloseBracket_141.23.13 T_int)) (= ASGBITXOR_pre_16.51.26 ASGBITXOR_16.51.26) (= Smt.true (is ASGBITXOR_16.51.26 T_int)) (= length_pre_36.50.25 length_36.50.25) (= length_36.50.25 (asField length_36.50.25 T_int)) (= dims_pre_143.45.31 dims_143.45.31) (= dims_143.45.31 (asField dims_143.45.31 T_javafe.ast.ExprVec)) (< (fClosedTime dims_143.45.31) alloc) (forall ((?s_16_ Int)) (=> (not (= ?s_16_ null)) (not (= (select1 dims_143.45.31 ?s_16_) null)))) (= seqModifierPragma_pre_6.74.32 seqModifierPragma_6.74.32) (= seqModifierPragma_6.74.32 (asField seqModifierPragma_6.74.32 T_javafe.util.StackVector)) (< (fClosedTime seqModifierPragma_6.74.32) alloc) (= NULLTYPE_pre_15.34.26 NULLTYPE_15.34.26) (= Smt.true (is NULLTYPE_15.34.26 T_int)) (= DIV_pre_16.35.26 DIV_16.35.26) (= Smt.true (is DIV_16.35.26 T_int)) (= EOF_pre_14.17.26 EOF_14.17.26) (= Smt.true (is EOF_14.17.26 T_int)) (= BLOCKSTMT_pre_17.25.7 BLOCKSTMT_17.25.7) (= Smt.true (is BLOCKSTMT_17.25.7 T_int)) (= BREAK_pre_14.54.26 BREAK_14.54.26) (= Smt.true (is BREAK_14.54.26 T_int)) (= CATCHCLAUSE_pre_17.45.7 CATCHCLAUSE_17.45.7) (= Smt.true (is CATCHCLAUSE_17.45.7 T_int)) (= otherCodes_pre_14.202.27 otherCodes_14.202.27) (= Smt.true (is otherCodes_14.202.27 ?v_0)) (isAllocated otherCodes_14.202.27 alloc) (= BITOR_pre_16.21.26 BITOR_16.21.26) (= Smt.true (is BITOR_16.21.26 T_int)) (= ARRAYTYPE_pre_17.65.7 ARRAYTYPE_17.65.7) (= Smt.true (is ARRAYTYPE_17.65.7 T_int)) (= loc_pre_32.16.13 loc_32.16.13) (= loc_32.16.13 (asField loc_32.16.13 T_int)) (= BREAKSTMT_pre_17.35.7 BREAKSTMT_17.35.7) (= Smt.true (is BREAKSTMT_17.35.7 T_int)) (= RBRACE_pre_14.36.26 RBRACE_14.36.26) (= Smt.true (is RBRACE_14.36.26 T_int)) (= SUPER_pre_14.91.26 SUPER_14.91.26) (= Smt.true (is SUPER_14.91.26 T_int)) (= elements_pre_160.61.47 elements_160.61.47) (= elements_160.61.47 (asField elements_160.61.47 (array T_javafe.ast.TypeModifierPragma))) (< (fClosedTime elements_160.61.47) alloc) (forall ((?s_17_ Int)) (=> (not (= ?s_17_ null)) (not (= (select1 elements_160.61.47 ?s_17_) null)))) (= code_pre_9.1294.15 code_9.1294.15) (= code_9.1294.15 (asField code_9.1294.15 T_int)) (= locId_pre_151.25.13 locId_151.25.13) (= locId_151.25.13 (asField locId_151.25.13 T_int)) (= ASGBITOR_pre_16.50.26 ASGBITOR_16.50.26) (= Smt.true (is ASGBITOR_16.50.26 T_int)) (= enclosingInstance_pre_58.37.14 enclosingInstance_58.37.14) (= enclosingInstance_58.37.14 (asField enclosingInstance_58.37.14 T_javafe.ast.Expr)) (< (fClosedTime enclosingInstance_58.37.14) alloc) (= op_pre_74.35.13 op_74.35.13) (= op_74.35.13 (asField op_74.35.13 T_int)) (= AMBIGUOUSVARIABLEACCESS_pre_17.55.7 AMBIGUOUSVARIABLEACCESS_17.55.7) (= Smt.true (is AMBIGUOUSVARIABLEACCESS_17.55.7 T_int)) (= seqTypeDeclElem_pre_4.1161.46 seqTypeDeclElem_4.1161.46) (= seqTypeDeclElem_4.1161.46 (asField seqTypeDeclElem_4.1161.46 T_javafe.util.StackVector)) (< (fClosedTime seqTypeDeclElem_4.1161.46) alloc) (forall ((?s_18_ Int)) (=> (not (= ?s_18_ null)) (not (= (select1 seqTypeDeclElem_4.1161.46 ?s_18_) null)))) (= SUB_pre_16.34.26 SUB_16.34.26) (= Smt.true (is SUB_16.34.26 T_int)) (= loc_pre_13.45.13 loc_13.45.13) (= loc_13.45.13 (asField loc_13.45.13 T_int)) (= locColon_pre_144.25.13 locColon_144.25.13) (= locColon_144.25.13 (asField locColon_144.25.13 T_int)) (= COMPILATIONUNIT_pre_17.14.7 COMPILATIONUNIT_17.14.7) (= Smt.true (is COMPILATIONUNIT_17.14.7 T_int)) (= NONE_pre_40.18.26 NONE_40.18.26) (= Smt.true (is NONE_40.18.26 T_int)) (= FORMALPARADECL_pre_17.24.7 FORMALPARADECL_17.24.7) (= Smt.true (is FORMALPARADECL_17.24.7 T_int)) (= LBRACE_pre_14.35.26 LBRACE_14.35.26) (= Smt.true (is LBRACE_14.35.26 T_int)) (= CONSTRUCTORINVOCATION_pre_17.44.7 CONSTRUCTORINVOCATION_17.44.7) (= Smt.true (is CONSTRUCTORINVOCATION_17.44.7 T_int)) (= currentStackBottom_pre_8.87.33 currentStackBottom_8.87.33) (= currentStackBottom_8.87.33 (asField currentStackBottom_8.87.33 T_int)) (= VOIDTYPE_pre_15.33.26 VOIDTYPE_15.33.26) (= Smt.true (is VOIDTYPE_15.33.26 T_int)) (= name_pre_35.20.28 name_35.20.28) (= name_35.20.28 (asField name_35.20.28 T_javafe.ast.Name)) (< (fClosedTime name_35.20.28) alloc) (forall ((?s_19_ Int)) (=> (not (= ?s_19_ null)) (not (= (select1 name_35.20.28 ?s_19_) null)))) (= loc_pre_157.20.13 loc_157.20.13) (= loc_157.20.13 (asField loc_157.20.13 T_int)) (= locId_pre_66.38.13 locId_66.38.13) (= locId_66.38.13 (asField locId_66.38.13 T_int)) (= ASGBITAND_pre_16.49.26 ASGBITAND_16.49.26) (= Smt.true (is ASGBITAND_16.49.26 T_int)) (= locId_pre_133.43.13 locId_133.43.13) (= locId_133.43.13 (asField locId_133.43.13 T_int)) (= TYPENAME_pre_17.64.7 TYPENAME_17.64.7) (= Smt.true (is TYPENAME_17.64.7 T_int)) (= PARENEXPR_pre_17.54.7 PARENEXPR_17.54.7) (= Smt.true (is PARENEXPR_17.54.7 T_int)) (= locSuper_pre_155.20.13 locSuper_155.20.13) (= locSuper_155.20.13 (asField locSuper_155.20.13 T_int)) (= THROWSTMT_pre_17.34.7 THROWSTMT_17.34.7) (= Smt.true (is THROWSTMT_17.34.7 T_int)) (= LAST_KEYWORD_pre_14.103.26 LAST_KEYWORD_14.103.26) (= Smt.true (is LAST_KEYWORD_14.103.26 T_int)) (= startingLoc_pre_10.65.15 startingLoc_10.65.15) (= startingLoc_10.65.15 (asField startingLoc_10.65.15 T_int)) (= ADD_pre_16.33.26 ADD_16.33.26) (= Smt.true (is ADD_16.33.26 T_int)) (= returnType_pre_132.18.28 returnType_132.18.28) (= returnType_132.18.28 (asField returnType_132.18.28 T_javafe.ast.Type)) (< (fClosedTime returnType_132.18.28) alloc) (forall ((?s_20_ Int)) (=> (not (= ?s_20_ null)) (not (= (select1 returnType_132.18.28 ?s_20_) null)))) (= locFirstSemi_pre_50.36.13 locFirstSemi_50.36.13) (= locFirstSemi_50.36.13 (asField locFirstSemi_50.36.13 T_int)) (= locDot_pre_142.29.13 locDot_142.29.13) (= locDot_142.29.13 (asField locDot_142.29.13 T_int)) (= locCloseParen_pre_147.21.13 locCloseParen_147.21.13) (= locCloseParen_147.21.13 (asField locCloseParen_147.21.13 T_int)) (= loc_pre_46.18.13 loc_46.18.13) (= loc_46.18.13 (asField loc_46.18.13 T_int)) (= SEMICOLON_pre_14.34.26 SEMICOLON_14.34.26) (= Smt.true (is SEMICOLON_14.34.26 T_int)) (= DOUBLETYPE_pre_15.32.26 DOUBLETYPE_15.32.26) (= Smt.true (is DOUBLETYPE_15.32.26 T_int)) (= AND_pre_16.20.26 AND_16.20.26) (= Smt.true (is AND_16.20.26 T_int)) (= WHILE_pre_14.102.26 WHILE_14.102.26) (= Smt.true (is WHILE_14.102.26 T_int)) (= count_pre_160.67.33 count_160.67.33) (= count_160.67.33 (asField count_160.67.33 T_int)) (= ASGURSHIFT_pre_16.48.26 ASGURSHIFT_16.48.26) (= Smt.true (is ASGURSHIFT_16.48.26 T_int)) (= ELSE_pre_14.65.26 ELSE_14.65.26) (= Smt.true (is ELSE_14.65.26 T_int)) (= FIELDDECL_pre_17.23.7 FIELDDECL_17.23.7) (= Smt.true (is FIELDDECL_17.23.7 T_int)) (= TRYCATCHSTMT_pre_17.43.7 TRYCATCHSTMT_17.43.7) (= Smt.true (is TRYCATCHSTMT_17.43.7 T_int)) (= syntax_pre_39.28.29 syntax_39.28.29) (= syntax_39.28.29 (asField syntax_39.28.29 T_boolean)) (= FIRST_KEYWORD_pre_14.51.26 FIRST_KEYWORD_14.51.26) (= Smt.true (is FIRST_KEYWORD_14.51.26 T_int)) (= locOpenParen_pre_142.52.13 locOpenParen_142.52.13) (= locOpenParen_142.52.13 (asField locOpenParen_142.52.13 T_int)) (= locOpenBracket_pre_141.20.13 locOpenBracket_141.20.13) (= locOpenBracket_141.20.13 (asField locOpenBracket_141.20.13 T_int)) (= URSHIFT_pre_16.32.26 URSHIFT_16.32.26) (= Smt.true (is URSHIFT_16.32.26 T_int)) (= SUPEROBJECTDESIGNATOR_pre_17.63.7 SUPEROBJECTDESIGNATOR_17.63.7) (= Smt.true (is SUPEROBJECTDESIGNATOR_17.63.7 T_int)) (= NULL_pre_12.60.26 NULL_12.60.26) (= Smt.true (is NULL_12.60.26 T_int)) (= CASTEXPR_pre_17.53.7 CASTEXPR_17.53.7) (= Smt.true (is CASTEXPR_17.53.7 T_int)) (= elements_pre_129.61.39 elements_129.61.39) (= elements_129.61.39 (asField elements_129.61.39 (array T_javafe.ast.MethodDecl))) (< (fClosedTime elements_129.61.39) alloc) (forall ((?s_21_ Int)) (=> (not (= ?s_21_ null)) (not (= (select1 elements_129.61.39 ?s_21_) null)))) (= RETURNSTMT_pre_17.33.7 RETURNSTMT_17.33.7) (= Smt.true (is RETURNSTMT_17.33.7 T_int)) (= modifierPragmas_pre_6.134.29 modifierPragmas_6.134.29) (= modifierPragmas_6.134.29 (asField modifierPragmas_6.134.29 T_javafe.ast.ModifierPragmaVec)) (< (fClosedTime modifierPragmas_6.134.29) alloc) (= FLOATTYPE_pre_15.31.26 FLOATTYPE_15.31.26) (= Smt.true (is FLOATTYPE_15.31.26 T_int)) (= OR_pre_16.19.26 OR_16.19.26) (= Smt.true (is OR_16.19.26 T_int)) (= NULLLIT_pre_15.45.26 NULLLIT_15.45.26) (= Smt.true (is NULLLIT_15.45.26 T_int)) (= ASGRSHIFT_pre_16.47.26 ASGRSHIFT_16.47.26) (= Smt.true (is ASGRSHIFT_16.47.26 T_int)) (= locOpenParen_pre_58.48.13 locOpenParen_58.48.13) (= locOpenParen_58.48.13 (asField locOpenParen_58.48.13 T_int)) (= seqExpr_pre_4.1145.46 seqExpr_4.1145.46) (= seqExpr_4.1145.46 (asField seqExpr_4.1145.46 T_javafe.util.StackVector)) (< (fClosedTime seqExpr_4.1145.46) alloc) (forall ((?s_22_ Int)) (=> (not (= ?s_22_ null)) (not (= (select1 seqExpr_4.1145.46 ?s_22_) null)))) (= LOCALVARDECL_pre_17.22.7 LOCALVARDECL_17.22.7) (= Smt.true (is LOCALVARDECL_17.22.7 T_int)) (= RSHIFT_pre_16.31.26 RSHIFT_16.31.26) (= Smt.true (is RSHIFT_16.31.26 T_int)) (= locQuestion_pre_144.22.13 locQuestion_144.22.13) (= locQuestion_144.22.13 (asField locQuestion_144.22.13 T_int)) (= nameIdLocs_pre_5.62.28 nameIdLocs_5.62.28) (= nameIdLocs_5.62.28 (asField nameIdLocs_5.62.28 ?v_0)) (< (fClosedTime nameIdLocs_5.62.28) alloc) (forall ((?s_23_ Int)) (=> (not (= ?s_23_ null)) (not (= (select1 nameIdLocs_5.62.28 ?s_23_) null)))) (= loc_pre_45.18.13 loc_45.18.13) (= loc_45.18.13 (asField loc_45.18.13 T_int)) (= elements_pre_128.61.38 elements_128.61.38) (= elements_128.61.38 (asField elements_128.61.38 (array T_javafe.ast.FieldDecl))) (< (fClosedTime elements_128.61.38) alloc) (forall ((?s_24_ Int)) (=> (not (= ?s_24_ null)) (not (= (select1 elements_128.61.38 ?s_24_) null)))) (= seqStmt_pre_70.46 seqStmt_70.46) (= seqStmt_70.46 (asField seqStmt_70.46 T_javafe.util.StackVector)) (< (fClosedTime seqStmt_70.46) alloc) (forall ((?s_25_ Int)) (=> (not (= ?s_25_ null)) (not (= (select1 seqStmt_70.46 ?s_25_) null)))) (= INSTANCEOFEXPR_pre_17.52.7 INSTANCEOFEXPR_17.52.7) (= Smt.true (is INSTANCEOFEXPR_17.52.7 T_int)) (= loc_pre_71.35.13 loc_71.35.13) (= loc_71.35.13 (asField loc_71.35.13 T_int)) (= TYPEOBJECTDESIGNATOR_pre_17.62.7 TYPEOBJECTDESIGNATOR_17.62.7) (= Smt.true (is TYPEOBJECTDESIGNATOR_17.62.7 T_int)) (= TRYFINALLYSTMT_pre_17.42.7 TRYFINALLYSTMT_17.42.7) (= Smt.true (is TRYFINALLYSTMT_17.42.7 T_int)) (= CHARTYPE_pre_15.30.26 CHARTYPE_15.30.26) (= Smt.true (is CHARTYPE_15.30.26 T_int)) (= elements_pre_158.61.39 elements_158.61.39) (= elements_158.61.39 (asField elements_158.61.39 (array T_javafe.ast.Identifier))) (< (fClosedTime elements_158.61.39) alloc) (forall ((?s_26_ Int)) (=> (not (= ?s_26_ null)) (not (= (select1 elements_158.61.39 ?s_26_) null)))) (= locDot_pre_152.23.13 locDot_152.23.13) (= locDot_152.23.13 (asField locDot_152.23.13 T_int)) (= STRINGLIT_pre_15.44.26 STRINGLIT_15.44.26) (= Smt.true (is STRINGLIT_15.44.26 T_int)) (= EVALSTMT_pre_17.32.7 EVALSTMT_17.32.7) (= Smt.true (is EVALSTMT_17.32.7 T_int)) (= ASGLSHIFT_pre_16.46.26 ASGLSHIFT_16.46.26) (= Smt.true (is ASGLSHIFT_16.46.26 T_int)) (= RETURN_pre_14.87.26 RETURN_14.87.26) (= Smt.true (is RETURN_14.87.26 T_int)) (= m_in_pre_9.212.46 m_in_9.212.46) (= m_in_9.212.46 (asField m_in_9.212.46 T_javafe.util.CorrelatedReader)) (< (fClosedTime m_in_9.212.46) alloc) (= type_pre_66.35.28 type_66.35.28) (= type_66.35.28 (asField type_66.35.28 T_javafe.ast.Type)) (< (fClosedTime type_66.35.28) alloc) (forall ((?s_27_ Int)) (=> (not (= ?s_27_ null)) (not (= (select1 type_66.35.28 ?s_27_) null)))) (= COMMA_pre_14.33.26 COMMA_14.33.26) (= Smt.true (is COMMA_14.33.26 T_int)) (= DO_pre_14.63.26 DO_14.63.26) (= Smt.true (is DO_14.63.26 T_int)) (= loc_pre_133.40.13 loc_133.40.13) (= loc_133.40.13 (asField loc_133.40.13 T_int)) (= LSHIFT_pre_16.30.26 LSHIFT_16.30.26) (= Smt.true (is LSHIFT_16.30.26 T_int)) (= loc_pre_50.33.13 loc_50.33.13) (= loc_50.33.13 (asField loc_50.33.13 T_int)) (= INITBLOCK_pre_17.21.7 INITBLOCK_17.21.7) (= Smt.true (is INITBLOCK_17.21.7 T_int)) (= POSTFIXDEC_pre_16.63.26 POSTFIXDEC_16.63.26) (= Smt.true (is POSTFIXDEC_16.63.26 T_int)) (= count_pre_129.67.33 count_129.67.33) (= count_129.67.33 (asField count_129.67.33 T_int)) (= init_pre_143.35.19 init_143.35.19) (= init_143.35.19 (asField init_143.35.19 T_javafe.ast.ArrayInit)) (< (fClosedTime init_143.35.19) alloc) (= locCloseBrace_pre_13.54.13 locCloseBrace_13.54.13) (= locCloseBrace_13.54.13 (asField locCloseBrace_13.54.13 T_int)) (= LONGTYPE_pre_15.29.26 LONGTYPE_15.29.26) (= Smt.true (is LONGTYPE_15.29.26 T_int)) (= TRY_pre_14.99.26 TRY_14.99.26) (= Smt.true (is TRY_14.99.26 T_int)) (= DOUBLELIT_pre_15.43.26 DOUBLELIT_15.43.26) (= Smt.true (is DOUBLELIT_15.43.26 T_int)) (= ASGSUB_pre_16.45.26 ASGSUB_16.45.26) (= Smt.true (is ASGSUB_16.45.26 T_int)) (= DEFAULT_pre_14.62.26 DEFAULT_14.62.26) (= Smt.true (is DEFAULT_14.62.26 T_int)) (= locCloseParen_pre_146.24.13 locCloseParen_146.24.13) (= locCloseParen_146.24.13 (asField locCloseParen_146.24.13 T_int)) (= SWITCHLABEL_pre_17.41.7 SWITCHLABEL_17.41.7) (= Smt.true (is SWITCHLABEL_17.41.7 T_int)) (= CONDEXPR_pre_17.51.7 CONDEXPR_17.51.7) (= Smt.true (is CONDEXPR_17.51.7 T_int)) (= SYNCHRONIZESTMT_pre_17.31.7 SYNCHRONIZESTMT_17.31.7) (= Smt.true (is SYNCHRONIZESTMT_17.31.7 T_int)) (= FIELD_pre_14.45.26 FIELD_14.45.26) (= Smt.true (is FIELD_14.45.26 T_int)) (= elementType_pre_8.43.27 elementType_8.43.27) (= elementType_8.43.27 (asField elementType_8.43.27 T_.TYPE)) (= enclosingInstance_pre_142.25.14 enclosingInstance_142.25.14) (= enclosingInstance_142.25.14 (asField enclosingInstance_142.25.14 T_javafe.ast.Expr)) (< (fClosedTime enclosingInstance_142.25.14) alloc) (= LT_pre_16.29.26 LT_16.29.26) (= Smt.true (is LT_16.29.26 T_int)) (= EXPROBJECTDESIGNATOR_pre_17.61.7 EXPROBJECTDESIGNATOR_17.61.7) (= Smt.true (is EXPROBJECTDESIGNATOR_17.61.7 T_int)) (= loc_pre_142.49.13 loc_142.49.13) (= loc_142.49.13 (asField loc_142.49.13 T_int)) (= locId_pre_37.20.13 locId_37.20.13) (= locId_37.20.13 (asField locId_37.20.13 T_int)) (= ids_pre_159.19.37 ids_159.19.37) (= ids_159.19.37 (asField ids_159.19.37 T_javafe.ast.IdentifierVec)) (< (fClosedTime ids_159.19.37) alloc) (forall ((?s_28_ Int)) (=> (not (= ?s_28_ null)) (not (= (select1 ids_159.19.37 ?s_28_) null)))) (= tag_pre_61.32.13 tag_61.32.13) (= tag_61.32.13 (asField tag_61.32.13 T_int)) (= POSTFIXINC_pre_16.62.26 POSTFIXINC_16.62.26) (= Smt.true (is POSTFIXINC_16.62.26 T_int)) (= count_pre_128.67.33 count_128.67.33) (= count_128.67.33 (asField count_128.67.33 T_int)) (= METHODDECL_pre_17.20.7 METHODDECL_17.20.7) (= Smt.true (is METHODDECL_17.20.7 T_int)) (= INTTYPE_pre_15.28.26 INTTYPE_15.28.26) (= Smt.true (is INTTYPE_15.28.26 T_int)) (= locOp_pre_75.32.13 locOp_75.32.13) (= locOp_75.32.13 (asField locOp_75.32.13 T_int)) (= loc_pre_123.30.13 loc_123.30.13) (= loc_123.30.13 (asField loc_123.30.13 T_int)) (= FLOATLIT_pre_15.42.26 FLOATLIT_15.42.26) (= Smt.true (is FLOATLIT_15.42.26 T_int)) (= ASGADD_pre_16.44.26 ASGADD_16.44.26) (= Smt.true (is ASGADD_16.44.26 T_int)) (= CONTINUE_pre_14.61.26 CONTINUE_14.61.26) (= Smt.true (is CONTINUE_14.61.26 T_int)) (= TYPEMODIFIERPRAGMA_pre_14.28.26 TYPEMODIFIERPRAGMA_14.28.26) (= Smt.true (is TYPEMODIFIERPRAGMA_14.28.26 T_int)) (= count_pre_158.67.33 count_158.67.33) (= count_158.67.33 (asField count_158.67.33 T_int)) (= locOpenParen_pre_147.18.13 locOpenParen_147.18.13) (= locOpenParen_147.18.13 (asField locOpenParen_147.18.13 T_int)) (= locKeyword_pre_58.45.13 locKeyword_58.45.13) (= locKeyword_58.45.13 (asField locKeyword_58.45.13 T_int)) (= COLON_pre_14.43.26 COLON_14.43.26) (= Smt.true (is COLON_14.43.26 T_int)) (= locOpenBracket_pre_156.21.13 locOpenBracket_156.21.13) (= locOpenBracket_156.21.13 (asField locOpenBracket_156.21.13 T_int)) (= LE_pre_16.28.26 LE_16.28.26) (= Smt.true (is LE_16.28.26 T_int)) (= identifierVal_pre_10.80.22 identifierVal_10.80.22) (= identifierVal_10.80.22 (asField identifierVal_10.80.22 T_javafe.ast.Identifier)) (< (fClosedTime identifierVal_10.80.22) alloc) (= NEWARRAYEXPR_pre_17.50.7 NEWARRAYEXPR_17.50.7) (= Smt.true (is NEWARRAYEXPR_17.50.7 T_int)) (= locOp_pre_74.43.13 locOp_74.43.13) (= locOp_74.43.13 (asField locOp_74.43.13 T_int)) (= SKIPSTMT_pre_17.40.7 SKIPSTMT_17.40.7) (= Smt.true (is SKIPSTMT_17.40.7 T_int)) (= DOSTMT_pre_17.30.7 DOSTMT_17.30.7) (= Smt.true (is DOSTMT_17.30.7 T_int)) (= tokenType_pre_70.90.8 tokenType_70.90.8) (= tokenType_70.90.8 (asField tokenType_70.90.8 T_int)) (= DEC_pre_16.59.26 DEC_16.59.26) (= Smt.true (is DEC_16.59.26 T_int)) (= loc_pre_64.22.13 loc_64.22.13) (= loc_64.22.13 (asField loc_64.22.13 T_int)) (= otherStrings_pre_14.193.30 otherStrings_14.193.30) (= Smt.true (is otherStrings_14.193.30 ?v_1)) (isAllocated otherStrings_14.193.30 alloc) (= loc_pre_134.29.13 loc_134.29.13) (= loc_134.29.13 (asField loc_134.29.13 T_int)) (= elements_pre_8.72.21 elements_8.72.21) (= elements_8.72.21 (asField elements_8.72.21 (array T_java.lang.Object))) (< (fClosedTime elements_8.72.21) alloc) (= elems_pre elems) (= elems (asElems elems)) (< (eClosedTime elems) alloc) (= LS (asLockSet LS)) (= alloc_pre alloc)) (not (and (= Smt.true (is this T_javafe.parser.ParseStmt)) (isAllocated this alloc) (not (= this null)) (= Smt.true (is l_110.33 T_javafe.parser.Lex)) (isAllocated l_110.33 alloc) ?v_6 ?v_7 (forall ((?brokenObj Int)) (=> (and (= Smt.true (is ?brokenObj T_javafe.util.StackVector)) (not (= ?brokenObj null))) (forall ((?i_8.76.31 Int)) (let ((?v_82 (select1 (select1 elems (select1 elements_8.72.21 ?brokenObj)) ?i_8.76.31))) (=> (and (<= 0 ?i_8.76.31) (< ?i_8.76.31 (select1 elementCount_8.79.33 ?brokenObj))) (or (= ?v_82 null) (subtypes (typeof ?v_82) (select1 elementType_8.43.27 ?brokenObj)))))))) (forall ((?brokenObj_1_ Int)) (=> (and (= Smt.true (is ?brokenObj_1_ T_javafe.ast.GenericBlockStmt)) (not (= ?brokenObj_1_ null))) (not (= (select1 locOpenBrace_29.22.13 ?brokenObj_1_) NULL_12.60.26)))) (forall ((?brokenObj_2_ Int)) (=> (and (= Smt.true (is ?brokenObj_2_ T_javafe.parser.Token)) (not (= ?brokenObj_2_ null))) (not (= (select1 startingLoc_10.65.15 ?brokenObj_2_) NULL_12.60.26)))) (= noTokens_14.212.27 (+ (+ ?v_3 ?v_2) ?v_4)) (forall ((?brokenObj_3_ Int)) (=> (and (= Smt.true (is ?brokenObj_3_ T_javafe.parser.ParseStmt)) (not (= ?brokenObj_3_ null))) (= (select1 elementType_8.43.27 (select1 seqCatchClause_76.46 ?brokenObj_3_)) T_javafe.ast.CatchClause))) (forall ((?brokenObj_4_ Int)) (=> (and (= Smt.true (is ?brokenObj_4_ T_javafe.ast.GenericBlockStmt)) (not (= ?brokenObj_4_ null))) (not (= (select1 locCloseBrace_29.25.13 ?brokenObj_4_) NULL_12.60.26)))) (forall ((?brokenObj_5_ Int)) (=> (and (= Smt.true (is ?brokenObj_5_ T_javafe.parser.ParseExpr)) (not (= ?brokenObj_5_ null))) (= (select1 owner_7.35.28 (select1 seqTypeDeclElem_4.1161.46 ?brokenObj_5_)) ?brokenObj_5_))) (forall ((?brokenObj_6_ Int)) (=> (and (= Smt.true (is ?brokenObj_6_ T_javafe.util.StackVector)) (not (= ?brokenObj_6_ null))) (= (select1 owner_7.35.28 (select1 elements_8.72.21 ?brokenObj_6_)) ?brokenObj_6_))) (forall ((?brokenObj_7_ Int)) (=> (and (= Smt.true (is ?brokenObj_7_ T_javafe.util.StackVector)) (not (= ?brokenObj_7_ null))) (>= (select1 vectorCount_8.97.33 ?brokenObj_7_) 1))) (forall ((?brokenObj_8_ Int)) (=> (and (= Smt.true (is ?brokenObj_8_ T_javafe.parser.ParseType)) (not (= ?brokenObj_8_ null))) (= (arrayLength (select1 nameDotLocs_5.65.28 ?brokenObj_8_)) (arrayLength (select1 nameIdLocs_5.62.28 ?brokenObj_8_))))) (= (arrayLength punctuationCodes_14.164.19) ?v_2) (forall ((?brokenObj_9_ Int)) (=> (and (= Smt.true (is ?brokenObj_9_ T_javafe.parser.ParseExpr)) (not (= ?brokenObj_9_ null))) (= (select1 elementType_8.43.27 (select1 seqExpr_4.1145.46 ?brokenObj_9_)) T_javafe.ast.Expr))) (forall ((?brokenObj_10_ Int)) (=> (and (= Smt.true (is ?brokenObj_10_ T_javafe.parser.ParseExpr)) (not (= ?brokenObj_10_ null))) (= (select1 elementType_8.43.27 (select1 seqVarInit_4.1153.46 ?brokenObj_10_)) T_javafe.ast.VarInit))) (forall ((?brokenObj_11_ Int)) (=> (and (= Smt.true (is ?brokenObj_11_ T_javafe.ast.TypeDecl)) (not (= ?brokenObj_11_ null))) (not (= (select1 loc_13.45.13 ?brokenObj_11_) NULL_12.60.26)))) (forall ((?brokenObj_12_ Int)) (let ((?v_83 (select1 ttype_10.52.15 ?brokenObj_12_)) (?v_84 (select1 auxVal_10.127.18 ?brokenObj_12_))) (let ((?v_85 (not (= ?v_84 null)))) (let ((?v_86 (and (= Smt.true (is ?v_84 T_java.lang.Integer)) ?v_85))) (=> (and (= Smt.true (is ?brokenObj_12_ T_javafe.parser.Token)) (not (= ?brokenObj_12_ null))) (and (not (= ?v_83 BOOLEANLIT_15.38.26)) (=> (= ?v_83 INTLIT_15.39.26) ?v_86) (=> (= ?v_83 LONGLIT_15.40.26) (and (= Smt.true (is ?v_84 T_java.lang.Long)) ?v_85)) (=> (= ?v_83 FLOATLIT_15.42.26) (and (= Smt.true (is ?v_84 T_java.lang.Float)) ?v_85)) (=> (= ?v_83 DOUBLELIT_15.43.26) (and (= Smt.true (is ?v_84 T_java.lang.Double)) ?v_85)) (=> (= ?v_83 STRINGLIT_15.44.26) (and (= Smt.true (is ?v_84 T_java.lang.String)) ?v_85)) (=> (= ?v_83 CHARLIT_15.41.26) ?v_86) (=> (= ?v_83 LEXICALPRAGMA_14.24.26) (and (= Smt.true (is ?v_84 T_javafe.ast.LexicalPragma)) ?v_85)) (=> (= ?v_83 MODIFIERPRAGMA_14.25.26) (and (= Smt.true (is ?v_84 T_javafe.ast.ModifierPragma)) ?v_85)) (=> (= ?v_83 STMTPRAGMA_14.26.26) (and (= Smt.true (is ?v_84 T_javafe.ast.StmtPragma)) ?v_85)) (=> (= ?v_83 TYPEDECLELEMPRAGMA_14.27.26) (and (= Smt.true (is ?v_84 T_javafe.ast.TypeDeclElemPragma)) ?v_85)) (=> (= ?v_83 TYPEMODIFIERPRAGMA_14.28.26) (and (= Smt.true (is ?v_84 T_javafe.ast.TypeModifierPragma)) ?v_85)))))))) (forall ((?brokenObj_13_ Int)) (=> (and (= Smt.true (is ?brokenObj_13_ T_javafe.parser.ParseType)) (not (= ?brokenObj_13_ null))) (= (select1 elementType_8.43.27 (select1 seqIdentifier_5.33.46 ?brokenObj_13_)) T_javafe.ast.Identifier))) (= ?v_3 (- (+ 1 LAST_KEYWORD_14.103.26) FIRST_KEYWORD_14.51.26)) (forall ((?brokenObj_14_ Int)) (=> (and (= Smt.true (is ?brokenObj_14_ T_javafe.ast.TypeDecl)) (not (= ?brokenObj_14_ null))) (not (= (select1 locId_13.48.13 ?brokenObj_14_) NULL_12.60.26)))) (= (arrayLength otherCodes_14.202.27) ?v_4) (forall ((?brokenObj_15_ Int)) (=> (and (= Smt.true (is ?brokenObj_15_ T_javafe.parser.ParseStmt)) (not (= ?brokenObj_15_ null))) (= (select1 owner_7.35.28 (select1 seqCatchClause_76.46 ?brokenObj_15_)) ?brokenObj_15_))) (forall ((?brokenObj_16_ Int)) (=> (and (= Smt.true (is ?brokenObj_16_ T_javafe.parser.Token)) (not (= ?brokenObj_16_ null)) (= (select1 ttype_10.52.15 ?brokenObj_16_) IDENT_15.25.26)) (not (= (select1 identifierVal_10.80.22 ?brokenObj_16_) null)))) (forall ((?brokenObj_17_ Int)) (=> (and (= Smt.true (is ?brokenObj_17_ T_javafe.util.StackVector)) (not (= ?brokenObj_17_ null))) (not (= (select1 elements_8.72.21 ?brokenObj_17_) null)))) (forall ((?brokenObj_18_ Int)) (let ((?v_87 (select1 code_9.1294.15 ?brokenObj_18_))) (=> (and (= Smt.true (is ?brokenObj_18_ T_javafe.parser.PunctuationPrefixTree)) (not (= ?brokenObj_18_ null))) (and (not (= ?v_87 IDENT_15.25.26)) (not (= ?v_87 BOOLEANLIT_15.38.26)) (not (= ?v_87 INTLIT_15.39.26)) (not (= ?v_87 LONGLIT_15.40.26)) (not (= ?v_87 FLOATLIT_15.42.26)) (not (= ?v_87 DOUBLELIT_15.43.26)) (not (= ?v_87 STRINGLIT_15.44.26)) (not (= ?v_87 CHARLIT_15.41.26)) (not (= ?v_87 LEXICALPRAGMA_14.24.26)) (not (= ?v_87 MODIFIERPRAGMA_14.25.26)) (not (= ?v_87 STMTPRAGMA_14.26.26)) (not (= ?v_87 TYPEDECLELEMPRAGMA_14.27.26)) (not (= ?v_87 TYPEMODIFIERPRAGMA_14.28.26)))))) (forall ((?brokenObj_19_ Int)) (=> (and (= Smt.true (is ?brokenObj_19_ T_javafe.parser.ParseType)) (not (= ?brokenObj_19_ null))) (= (select1 owner_7.35.28 (select1 seqIdentifier_5.33.46 ?brokenObj_19_)) ?brokenObj_19_))) (forall ((?brokenObj_20_ Int)) (=> (and (= Smt.true (is ?brokenObj_20_ T_javafe.parser.ParseExpr)) (not (= ?brokenObj_20_ null))) (= (select1 owner_7.35.28 (select1 seqExpr_4.1145.46 ?brokenObj_20_)) ?brokenObj_20_))) (forall ((?brokenObj_21_ Int)) (=> (and (= Smt.true (is ?brokenObj_21_ T_javafe.ast.TypeDecl)) (not (= ?brokenObj_21_ null))) (not (= (select1 locOpenBrace_13.51.13 ?brokenObj_21_) NULL_12.60.26)))) (nonnullelements otherStrings_14.193.30 elems) (forall ((?i_14.149.29 Int)) (let ((?v_88 (select1 (select1 elems punctuationCodes_14.164.19) ?i_14.149.29))) (=> (and (<= 0 ?i_14.149.29) (<= ?i_14.149.29 (arrayLength punctuationCodes_14.164.19))) (and (not (= ?v_88 IDENT_15.25.26)) (not (= ?v_88 BOOLEANLIT_15.38.26)) (not (= ?v_88 INTLIT_15.39.26)) (not (= ?v_88 LONGLIT_15.40.26)) (not (= ?v_88 FLOATLIT_15.42.26)) (not (= ?v_88 DOUBLELIT_15.43.26)) (not (= ?v_88 STRINGLIT_15.44.26)) (not (= ?v_88 CHARLIT_15.41.26)) (not (= ?v_88 LEXICALPRAGMA_14.24.26)) (not (= ?v_88 MODIFIERPRAGMA_14.25.26)) (not (= ?v_88 STMTPRAGMA_14.26.26)) (not (= ?v_88 TYPEDECLELEMPRAGMA_14.27.26)) (not (= ?v_88 TYPEMODIFIERPRAGMA_14.28.26)))))) (forall ((?brokenObj_22_ Int)) (=> (and (= Smt.true (is ?brokenObj_22_ T_javafe.parser.ParseUtil)) (not (= ?brokenObj_22_ null))) (= (select1 elementType_8.43.27 (select1 seqModifierPragma_6.74.32 ?brokenObj_22_)) T_javafe.ast.ModifierPragma))) (forall ((?brokenObj_23_ Int)) (let ((?v_89 (select1 currentStackBottom_8.87.33 ?brokenObj_23_))) (=> (and (= Smt.true (is ?brokenObj_23_ T_javafe.util.StackVector)) (not (= ?brokenObj_23_ null))) (or (= ?v_89 0) (= (select1 (select1 elems (select1 elements_8.72.21 ?brokenObj_23_)) (- ?v_89 1)) null))))) (forall ((?brokenObj_24_ Int)) (=> (and (= Smt.true (is ?brokenObj_24_ T_javafe.parser.ParseStmt)) (not (= ?brokenObj_24_ null))) (= (select1 elementType_8.43.27 (select1 seqStmt_70.46 ?brokenObj_24_)) T_javafe.ast.Stmt))) (forall ((?brokenObj_25_ Int)) (=> (and (= Smt.true (is ?brokenObj_25_ T_javafe.parser.ParseType)) (not (= ?brokenObj_25_ null))) (= (select1 owner_7.35.28 (select1 nameDotLocs_5.65.28 ?brokenObj_25_)) ?brokenObj_25_))) (forall ((?brokenObj_26_ Int)) (let ((?v_90 (select1 currentStackBottom_8.87.33 ?brokenObj_26_))) (=> (and (= Smt.true (is ?brokenObj_26_ T_javafe.util.StackVector)) (not (= ?brokenObj_26_ null))) (and (<= 0 ?v_90) (<= ?v_90 (select1 elementCount_8.79.33 ?brokenObj_26_)))))) (forall ((?brokenObj_27_ Int)) (=> (and (= Smt.true (is ?brokenObj_27_ T_javafe.ast.TypeDecl)) (not (= ?brokenObj_27_ null))) (not (= (select1 locCloseBrace_13.54.13 ?brokenObj_27_) NULL_12.60.26)))) (forall ((?brokenObj_28_ Int)) (=> (and (= Smt.true (is ?brokenObj_28_ T_javafe.parser.ParseExpr)) (not (= ?brokenObj_28_ null))) (= (select1 owner_7.35.28 (select1 seqVarInit_4.1153.46 ?brokenObj_28_)) ?brokenObj_28_))) (nonnullelements punctuationStrings_14.134.22 elems) (forall ((?brokenObj_29_ Int)) (=> (and (= Smt.true (is ?brokenObj_29_ T_javafe.parser.ParseUtil)) (not (= ?brokenObj_29_ null))) (= (select1 owner_7.35.28 (select1 seqModifierPragma_6.74.32 ?brokenObj_29_)) ?brokenObj_29_))) (forall ((?brokenObj_30_ Int)) (=> (and (= Smt.true (is ?brokenObj_30_ T_javafe.util.StackVector)) (not (= ?brokenObj_30_ null))) (> (arrayLength (select1 elements_8.72.21 ?brokenObj_30_)) 0))) (forall ((?i_14.147.29 Int)) (=> (and (<= 0 ?i_14.147.29) (<= ?i_14.147.29 (arrayLength punctuationCodes_14.164.19))) (not (= (select1 (select1 elems punctuationCodes_14.164.19) ?i_14.147.29) NULL_14.82.26)))) (forall ((?brokenObj_31_ Int)) (=> (and (= Smt.true (is ?brokenObj_31_ T_javafe.parser.ParseType)) (not (= ?brokenObj_31_ null))) (>= (arrayLength (select1 nameIdLocs_5.62.28 ?brokenObj_31_)) 10))) (nonnullelements keywordStrings_14.181.30 elems) (forall ((?brokenObj_32_ Int)) (=> (and (= Smt.true (is ?brokenObj_32_ T_javafe.parser.ParseStmt)) (not (= ?brokenObj_32_ null))) (= (select1 owner_7.35.28 (select1 seqStmt_70.46 ?brokenObj_32_)) ?brokenObj_32_))) (forall ((?brokenObj_33_ Int)) (let ((?v_91 (select1 elementCount_8.79.33 ?brokenObj_33_))) (=> (and (= Smt.true (is ?brokenObj_33_ T_javafe.util.StackVector)) (not (= ?brokenObj_33_ null))) (and (<= 0 ?v_91) (<= ?v_91 (arrayLength (select1 elements_8.72.21 ?brokenObj_33_))))))) (= Smt.true (is ?v_5 T_javafe.parser.TagConstants)) (not (= ?v_5 null)) (forall ((?brokenObj_34_ Int)) (=> (and (= Smt.true (is ?brokenObj_34_ T_javafe.ast.CatchClause)) (not (= ?brokenObj_34_ null))) (not (= (select1 loc_64.22.13 ?brokenObj_34_) NULL_12.60.26)))) (forall ((?brokenObj_35_ Int)) (let ((?v_92 (select1 tokenType_70.90.8 ?brokenObj_35_))) (=> (and (= Smt.true (is ?brokenObj_35_ T_javafe.ast.Identifier)) (not (= ?brokenObj_35_ null))) (and (not (= ?v_92 BOOLEANLIT_15.38.26)) (not (= ?v_92 INTLIT_15.39.26)) (not (= ?v_92 LONGLIT_15.40.26)) (not (= ?v_92 FLOATLIT_15.42.26)) (not (= ?v_92 DOUBLELIT_15.43.26)) (not (= ?v_92 STRINGLIT_15.44.26)) (not (= ?v_92 CHARLIT_15.41.26)) (not (= ?v_92 LEXICALPRAGMA_14.24.26)) (not (= ?v_92 MODIFIERPRAGMA_14.25.26)) (not (= ?v_92 STMTPRAGMA_14.26.26)) (not (= ?v_92 TYPEDECLELEMPRAGMA_14.27.26)) (not (= ?v_92 TYPEMODIFIERPRAGMA_14.28.26)))))) (forall ((?brokenObj_36_ Int)) (=> (and (= Smt.true (is ?brokenObj_36_ T_javafe.parser.ParseExpr)) (not (= ?brokenObj_36_ null))) (= (select1 elementType_8.43.27 (select1 seqTypeDeclElem_4.1161.46 ?brokenObj_36_)) T_javafe.ast.TypeDeclElem))) (forall ((?brokenObj_37_ Int)) (=> (and (= Smt.true (is ?brokenObj_37_ T_javafe.parser.Token)) (not (= ?brokenObj_37_ null))) (not (= (select1 endingLoc_10.72.15 ?brokenObj_37_) NULL_12.60.26)))) (forall ((?brokenObj_38_ Int)) (=> (and (= Smt.true (is ?brokenObj_38_ T_javafe.util.StackVector)) (not (= ?brokenObj_38_ null))) (= (typeof (select1 elements_8.72.21 ?brokenObj_38_)) (array T_java.lang.Object)))) (forall ((?brokenObj_39_ Int)) (=> (and (= Smt.true (is ?brokenObj_39_ T_javafe.parser.ParseType)) (not (= ?brokenObj_39_ null))) (= (select1 owner_7.35.28 (select1 nameIdLocs_5.62.28 ?brokenObj_39_)) ?brokenObj_39_))) (or ?v_11 (and ?v_6 (or (and ?v_8 ?v_9 ?v_12) (and ?v_27 ?v_9 ?v_28 ?v_29 ?v_30 ?v_31 ?v_32 ?v_10 ?v_33 ?v_34 ?v_35 ?v_36 ?v_37 (or ?v_11 (and ?v_6 ?v_38 (or ?v_12 (and ?v_39 ?v_40 ?v_41 ?v_42 ?v_14 ?v_43 ?v_44 ?v_45 ?v_46 ?v_47 ?v_48 (or (not (and (<= 0 0) (< (+ 0 (select1 currentStackBottom_116.6_146.45 tmp1_seqStmt_117.26)) (select1 elementCount_116.6_146.23 tmp1_seqStmt_117.26)))) (and ?v_49 ?v_50 ?v_15 ?v_51 ?v_52 (or (not ?v_16) (and ?v_16 ?v_53 ?v_54 ?v_55 ?v_17 ?v_56 ?v_57 ?v_58 (or (and ?v_19 ?v_9 ?v_22) (and ?v_59 (or (and ?v_23 ?v_24 ?v_9 ?v_22) (and ?v_60 ?v_61 (not ?v_62)))))))))))))))) (and ?v_6 (or (and ?v_8 ?v_9 (= Smt.true (is RES_112.13_112.13 T_javafe.ast.BlockStmt)) (isAllocated RES_112.13_112.13 alloc) ?v_26 (=> ?v_26 (not (= RES_112.13_112.13 null))) ?v_9 (= RES_2_ RES_112.13_112.13)) (and ?v_27 ?v_9 ?v_28 ?v_29 ?v_30 ?v_31 ?v_32 ?v_10 ?v_33 ?v_34 ?v_35 ?v_36 ?v_37 ?v_6 ?v_38 ?v_39 ?v_40 ?v_41 ?v_42 ?v_14 ?v_43 ?v_44 ?v_45 ?v_46 ?v_47 ?v_48 ?v_49 ?v_50 ?v_15 ?v_51 ?v_52 ?v_16 ?v_53 ?v_54 ?v_55 ?v_17 ?v_56 ?v_57 ?v_58 ?v_59 ?v_60 ?v_61 ?v_62 (= vectorCount_127.14_8.296.17 (store1 vectorCount_114.14_8.282.17 this_127.14_127.14 after_127.14_127.14_8.296.17)) (= elementCount_127.14_8.298.17 (store1 elementCount_116.6_146.23 this_127.14_127.14 after_127.14_127.14_8.298.17)) (= currentStackBottom_127.14_8.298.31 (store1 currentStackBottom_116.6_146.45 this_127.14_127.14 after_127.14_127.14_8.298.31)) (= elementCount_127.14_8.298.17 (asField elementCount_127.14_8.298.17 T_int)) (= vectorCount_127.14_8.296.17 (asField vectorCount_127.14_8.296.17 T_int)) (= currentStackBottom_127.14_8.298.31 (asField currentStackBottom_127.14_8.298.31 T_int)) ?v_63 (=> ?v_63 (= (select1 vectorCount_127.14_8.296.17 this_127.14_127.14) (- ?v_64 1))) (forall ((?brokenObj_47_ Int)) (=> (and (= Smt.true (is ?brokenObj_47_ T_javafe.util.StackVector)) (not (= ?brokenObj_47_ null)) (forall ((?i_8.76.31 Int)) (let ((?v_93 (select1 (select1 elems (select1 elements_8.72.21 ?brokenObj_47_)) ?i_8.76.31))) (=> (and (<= 0 ?i_8.76.31) (< ?i_8.76.31 (select1 elementCount_116.6_146.23 ?brokenObj_47_))) (or (= ?v_93 null) (subtypes (typeof ?v_93) (select1 elementType_8.43.27 ?brokenObj_47_))))))) (forall ((?i_8.76.31 Int)) (let ((?v_94 (select1 (select1 elems (select1 elements_8.72.21 ?brokenObj_47_)) ?i_8.76.31))) (=> (and (<= 0 ?i_8.76.31) (< ?i_8.76.31 (select1 elementCount_127.14_8.298.17 ?brokenObj_47_))) (or (= ?v_94 null) (subtypes (typeof ?v_94) (select1 elementType_8.43.27 ?brokenObj_47_)))))))) (forall ((?brokenObj_48_ Int)) (=> (and (= Smt.true (is ?brokenObj_48_ T_javafe.util.StackVector)) (not (= ?brokenObj_48_ null)) (>= (select1 vectorCount_114.14_8.282.17 ?brokenObj_48_) 1)) (>= (select1 vectorCount_127.14_8.296.17 ?brokenObj_48_) 1))) (forall ((?brokenObj_49_ Int)) (let ((?v_95 (select1 currentStackBottom_116.6_146.45 ?brokenObj_49_)) (?v_96 (select1 elems (select1 elements_8.72.21 ?brokenObj_49_))) (?v_97 (select1 currentStackBottom_127.14_8.298.31 ?brokenObj_49_))) (=> (and (= Smt.true (is ?brokenObj_49_ T_javafe.util.StackVector)) (not (= ?brokenObj_49_ null)) (or (= ?v_95 0) (= (select1 ?v_96 (- ?v_95 1)) null))) (or (= ?v_97 0) (= (select1 ?v_96 (- ?v_97 1)) null))))) (forall ((?brokenObj_50_ Int)) (let ((?v_98 (select1 currentStackBottom_116.6_146.45 ?brokenObj_50_)) (?v_99 (select1 currentStackBottom_127.14_8.298.31 ?brokenObj_50_))) (=> (and (= Smt.true (is ?brokenObj_50_ T_javafe.util.StackVector)) (not (= ?brokenObj_50_ null)) (<= 0 ?v_98) (<= ?v_98 (select1 elementCount_116.6_146.23 ?brokenObj_50_))) (and (<= 0 ?v_99) (<= ?v_99 (select1 elementCount_127.14_8.298.17 ?brokenObj_50_)))))) (forall ((?brokenObj_51_ Int)) (let ((?v_100 (select1 elementCount_116.6_146.23 ?brokenObj_51_)) (?v_102 (arrayLength (select1 elements_8.72.21 ?brokenObj_51_))) (?v_101 (select1 elementCount_127.14_8.298.17 ?brokenObj_51_))) (=> (and (= Smt.true (is ?brokenObj_51_ T_javafe.util.StackVector)) (not (= ?brokenObj_51_ null)) (<= 0 ?v_100) (<= ?v_100 ?v_102)) (and (<= 0 ?v_101) (<= ?v_101 ?v_102))))) ?v_9 (= RES_2_ result_117.6))) (or (not ?v_65) (and ?v_65 (not (=> ?v_65 (not (= RES_2_ null)))))))))))))))))))))))))))
(check-sat)
(exit)
